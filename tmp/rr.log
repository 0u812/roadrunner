Logs are going to /home/totte/rr/runs/test_1.log
Log level is:DEBUG5
Working Directory: /home/totte/rr/runs

Creating a compiler
In RoadRunner ctor
Read SBML content from file:
 <?xml version="1.0" encoding="UTF-8"?>
<sbml xmlns="http://www.sbml.org/sbml/level2/version4" level="2" version="4">
  <model metaid="_case00001" id="case00001" name="case00001">
    <listOfCompartments>
      <compartment id="compartment" name="compartment" size="1" units="volume"/>
    </listOfCompartments>
    <listOfSpecies>
      <species id="S1" name="S1" compartment="compartment" initialAmount="0.00015" substanceUnits="substance"/>
      <species id="S2" name="S2" compartment="compartment" initialAmount="0" substanceUnits="substance"/>
    </listOfSpecies>
    <listOfParameters>
      <parameter id="k1" name="k1" value="1"/>
    </listOfParameters>
    <listOfReactions>
      <reaction id="reaction1" name="reaction1" reversible="false" fast="false">
        <listOfReactants>
          <speciesReference species="S1"/>
        </listOfReactants>
        <listOfProducts>
          <speciesReference species="S2"/>
        </listOfProducts>
        <kineticLaw>
          <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
              <times/>
              <ci> compartment </ci>
              <ci> k1 </ci>
              <ci> S1 </ci>
            </apply>
          </math>
        </kineticLaw>
      </reaction>
    </listOfReactions>
  </model>
</sbml>

============ End of SBML 

Loading SBML into simulator
Entering CGenerators generateModelCode(string) function
Entering function convertTime in file /home/totte/rr/rrl/source/rrNOMSupport.cpp
Loading SBML into NOM
Building Symbol Table
Processing compartment with ID: compartment
Processing parameter with ID:k1
Processing species with ID: S1
Processing species with ID: S2
========== Symbols read into Symbol Table (4) ==============
Key = S1
ID = S1
Type = 1
Value = 0.00015
Has Initial Assignment = 0
Has Rule = false

Key = S2
ID = S2
Type = 1
Value = 0
Has Initial Assignment = 0
Has Rule = false

Key = compartment
ID = compartment
Type = 0
Value = 1
Has Initial Assignment = 0
Has Rule = false

Key = k1
ID = k1
Type = 2
Value = 1
Has Initial Assignment = 0
Has Rule = false

In function LookForDependencies
Processing model: case00001
Number of reactions:1
Loading sbml into StructAnalysis
Message from StructAnalysis.LoadSBML function
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
STRUCTURAL ANALYSIS MODULE : Results 
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
Size of Stochiometric Matrix: 2 x 1 (Rank is  1)
Nonzero entries in Stochiometric Matrix: 2  (100% full)

Independent Species (1) :
S1

Dependent Species (1) :
S2

L0 : There is 1 dependency. L0 is a 1x1 matrix.

Conserved Entities
1:  + S1 + S2
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
Developed by the Computational Systems Biology Group at Keck Graduate Institute 
and the Saurolab at the Bioengineering Departmant at  University of Washington.
Contact : Frank T. Bergmann (fbergman@u.washington.edu) or Herbert M. Sauro.   

          (previous authors) Ravishankar Rao Vallabhajosyula                   
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------


Returning List: {"S1 0.00015 false","S2 0 false"}
Got List: {"S1 0.00015 false","S2 0 false"}
Adding symbol to floatingSpeciesConcentrationList:Name: S1
Adding symbol to floatingSpeciesConcentrationList:Name: S2
Adding symbolName: k1 to global parameters
Appended :#ifndef modelH
Appended :#define modelH
Appended :#include <stdio.h>
Appended :#include <stdbool.h>
Appended :#include "rrCExporter.h"	             //Export Stuff.
Appended ://************************************************************************** 
Appended ://Number of floating species: 
Appended :	// y[
Appended :	// y[
Appended ://************************************************************************** 
Appended :
Appended :#include <math.h>
Appended :#include <stdio.h>
Appended :#include "rrSupport.h"	     //Supportfunctions for event handling..
Appended :	typedef double (*TEventDelayDelegate)();
Appended :typedef void (*TEventAssignmentDelegate)();
Appended :typedef double* (*TComputeEventAssignmentDelegate)();
Appended :typedef void (*TPerformEventAssignmentDelegate)();
Appended :void loadSymbolTables(){
Appended :	variableTable[0] = "S1";
Appended :	variableTable[1] = "S2";
Appended :	globalParameterTable[0] = "k1";
Appended :
Appended :}

Appended :void resetEvents(){
Appended :}
Appended :void setConcentration(int index, double value)
{
Appended :	double volume = 0.0;

Appended :	_y[index] = value;
Appended :	switch (index)	{

Appended :		case 0:			volume = _c[0];

Appended :		break;
Appended :		case 1:			volume = _c[0];

Appended :		break;
Appended :	}
Appended :	_amounts[index] = _y[index]*volume;
Appended :}

Appended :double getConcentration(int index){

Appended :	return _y[index];
Appended :}

Appended :void convertToAmounts(){

Appended :	_amounts[0] = _y[0]*_c[0];
Appended :	_amounts[1] = _y[1]*_c[0];
Appended :}

Appended :void convertToConcentrations(){
Appended :	_y[
Appended :	_y[
Appended :}


Appended :int getNumLocalParameters(int reactionId){
	
Appended :return localParameterDimensions[reactionId];}


Appended :void initializeInitialConditions(){
Appended :	_init_y[0] = (double) 0.0001499999999999999869/ _c[0];
Appended :	_init_y[1] = (double) 0/ _c[0];
Appended :}


Appended :void setInitialConditions()
Appended :{
Appended :	_y[
Appended :	_amounts[
Appended :	_y[
Appended :	_amounts[
Appended :}

Appended :void setBoundaryConditions(){

Appended :}

Appended :void setCompartmentVolumes(){
Appended :	_c[0] = (double)1;

In FillStack Filling stack with symbol: ID = compartment
Type = 0
Value = 1
Has Initial Assignment = 0
Has Rule = false

Appended :_c[0]
Appended : = 	
Appended :(double)1
Appended :	_c[0] = 	(double)1;

Appended :}

Appended :void setParameterValues(){
Appended :	_gp[0] = (double)1;

Appended :}

Appended :// Uses the equation: C = Sd - L0*Si
Appended :void computeConservedTotals(){
Appended :	_ct[0] = 
Appended : + _y[0]*_c[0]
Appended : + _y[1]*_c[0]
Appended :;
Appended :}

Appended :// Compute values of dependent species 
Appended :// Uses the equation: Sd = C + L0*Si
Appended :void updateDependentSpeciesValues(double* y){
Appended :	_y[1] = 
Appended :(_ct[0]
Appended : - y[0]*_c[0]
Appended :) / _c[0];
Appended :}

Appended :void computeRules(double* y){

Appended :}


Appended :void InitializeRates(){
Appended :}

Appended :void AssignRatesA(){

Appended :}

Appended :void InitializeRateRuleSymbols() {
Appended :}

Appended :void AssignRatesB(double oRates[]){
Appended :}

Appended :double* GetCurrentValues(){
Appended :	double* dResult = (double*) malloc(sizeof(double)*
Appended :	return dResult;
Appended :}

Appended ://Uses the equation: dSd/dt = L0 dSi/dt
Appended :void computeAllRatesOfChange(){
Appended :	
Appended :	double* dTemp = (double*) malloc( sizeof(double)* (_amountsSize + _rateRulesSize) );

Appended :	
Appended :	
Appended :	//amounts.CopyTo(dTemp, rateRules.Length); 

Appended :	evalModel(mTime, dTemp);
Appended :	_dydt[1] = 
Appended : - _dydt[0];
Appended :
Appended :}

Appended :// Compute the reaction rates
Appended :void computeReactionRates(double time, double *y){
Appended :_c[0]
Appended :*	
Appended :_gp[0]
Appended :*	
Appended :_y[0]
Appended :	
Appended :}

Appended ://Model Function
Appended :void evalModel (double timein, double* oAmounts){
Appended :	_y[
Appended :	_y[
Appended :
Appended :	convertToAmounts();
Appended :	mTime = timein;  // Don't remove
Appended :	updateDependentSpeciesValues (_y);
Appended :	computeReactionRates (mTime, _y);
Appended : - _rates[0]
Appended :	_dydt[
Appended :	convertToAmounts();
Appended :}

Appended ://Event handling function
Appended :void evalEvents(double timeIn, double *oAmounts)
Appended :{
Appended :	mTime = timeIn;
Appended :	updateDependentSpeciesValues(_y);
Appended :	computeRules(_y);
Appended :}

Appended :void InitializeDelays(){

Appended :}

Appended :void computeEventPriorities(){
Appended :}

Appended :void evalInitialAssignments()
Appended :{
Appended :}

Appended :void testConstraints()
Appended :{
Appended :}

Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	
Appended :	localParameterDimensions[0] = 0;
Appended :	_lp[
Appended :{
Appended :}
Appended :
#endif //modelH
Wrote header to file: /home/totte/rr/runs/test_1.h
Wrote source code to file: /home/totte/rr/runs/test_1.c
 ------ Model Code --------
#ifndef modelH
#define modelH
#include <stdio.h>
#include <stdbool.h>
#include "rrCExporter.h"	             //Export Stuff.
//************************************************************************** 
//Number of floating species: 2
	// y[0] = S1
	// y[1] = S2
//************************************************************************** 

D_S char*                          mModelName;                                       
D_S char**                         mWarnings;                                       
D_S double                         _gp[1];                                 //Vector containing all the global parameters in the System  
D_S const int                      _gpSize=1;                              
D_S double*                        _lp[1];                                 //Vector containing all the local parameters in the System  
D_S const int                      _lpSize=1;                              
D_S double                         _y[2];                                  //Vector containing the concentrations of all floating species
D_S const int                      _ySize=2;                               
D_S double                         _init_y[2];                             //Vector containing the initial concentrations of all floating species
D_S const int                      _init_ySize=2;                          
D_S double                         _amounts[2];                            //Vector containing the amounts of all floating species 
D_S const int                      _amountsSize=2;                         

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S double                         _bc[1];                                 //Vector containing all the boundary species concentration values
D_S const int                      _bcSize=0;                              
D_S double                         _c[1];                                  //Vector containing all the compartment values   
D_S const int                      _cSize=1;                               
D_S double                         _dydt[2];                               //Vector containing rates of changes of all species   
D_S const int                      _dydtSize=2;                            
D_S double                         _rates[1];                              //Vector containing the rate laws of all reactions    
D_S const int                      _ratesSize=1;                           
D_S double                         _ct[1];                                 //Vector containing values of all conserved sums      
D_S const int                      _ctSize=1;                              

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S double                         mEventTests[1];                         //Vector containing results of any event tests        
D_S const int                      mEventTestsSize=0;                      
	typedef double (*TEventDelayDelegate)();

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
TEventDelayDelegate                mEventDelay[1];                         //Array of trigger function pointers
D_S const int                      mEventDelaySize=0;                      
D_S TEventDelayDelegate*               GetEventDelays();                       

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
bool                               _eventType[1];                          //Array holding the status whether events are useValuesFromTriggerTime or not
D_S const int                      _eventTypeSize=0;                       

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
bool                               _eventPersistentType[1];                //Array holding the status whether events are persitstent or not
D_S const int                      _eventPersistentTypeSize=0;             
D_S double                         mTime;                                       
D_S int                            numIndependentVariables;                                       
D_S int                            numDependentVariables;                                       
D_S int                            numTotalVariables;                                       
D_S int                            numBoundaryVariables;                                       
D_S int                            numGlobalParameters;                                       
D_S int                            numCompartments;                                       
D_S int                            numReactions;                                       
D_S int                            numRules;                                       
D_S int                            numEvents;                                       
D_S char*                          variableTable[2];                       
D_S const int                      variableTableSize=2;                    

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S char*                          boundaryTable[1];                       
D_S const int                      boundaryTableSize=0;                    
D_S char*                          globalParameterTable[1];                
D_S const int                      globalParameterTableSize=1;             
D_S int                            localParameterDimensions[1];            
D_S const int                      localParameterDimensionsSize=1;         

typedef void (*TEventAssignmentDelegate)();
D_S TEventAssignmentDelegate*      _eventAssignments;                                       
D_S TEventAssignmentDelegate*          Get_eventAssignments();                 

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S double                         _eventPriorities[1];                    
D_S const int                      _eventPrioritiesSize=0;                 

typedef double* (*TComputeEventAssignmentDelegate)();
D_S TComputeEventAssignmentDelegate*   Get_computeEventAssignments();          
D_S TComputeEventAssignmentDelegate*_computeEventAssignments;                                       

typedef void (*TPerformEventAssignmentDelegate)();
D_S TPerformEventAssignmentDelegate*_performEventAssignments;                                       
D_S TPerformEventAssignmentDelegate*   Get_performEventAssignments();          

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S bool                           mEventStatusArray[1];                   
D_S const int                      mEventStatusArraySize=0;                

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S bool                           _previousEventStatusArray[1];           
D_S const int                      _previousEventStatusArraySize=0;        


//NON - EXPORTS ========================================
    void                               InitializeDelays();                     


//EXPORTS ========================================
D_S int                                InitModel();                            
D_S char*                              GetModelName();                         
D_S void                               resetEvents();                          
D_S void                               setConcentration(int index, double value);
D_S double                             getConcentration(int index);            
D_S void                               convertToAmounts();                     
D_S void                               convertToConcentrations();              
D_S int                                getNumLocalParameters(int reactionId);  
D_S void                               initializeInitialConditions();          
D_S void                               setInitialConditions();                 
D_S void                               setBoundaryConditions();                
D_S void                               setCompartmentVolumes();                
D_S void                               setParameterValues();                   
D_S void                               computeConservedTotals();               
D_S void                               updateDependentSpeciesValues(double* y);
D_S void                               computeRules(double* y);                

//The array size for the follwoing variable was generated as 0. We put 1, to make it legal code.
D_S double                         _rateRules[1];                          //Vector containing values of additional rate rules
D_S const int                      _rateRulesSize=0;                       
D_S void                               InitializeRates();                      
D_S void                               AssignRatesA();                         
D_S void                               InitializeRateRuleSymbols();            
D_S void                               AssignRatesB(double oRates[]);          
D_S double*                            GetCurrentValues();                     
D_S void                               computeAllRatesOfChange();              
D_S void                               computeReactionRates(double time, double *y);
D_S void                               evalModel(double, double*);             
D_S void                               evalEvents(double timeIn, double *oAmounts);
D_S void                               computeEventPriorities();               
D_S void                               evalInitialAssignments();               
D_S void                               testConstraints();                      


#endif //modelH
#include <math.h>
#include <stdio.h>
#include "rrSupport.h"	     //Supportfunctions for event handling..
void loadSymbolTables()
{
	variableTable[0] = "S1";
	variableTable[1] = "S2";
	globalParameterTable[0] = "k1";
}

void resetEvents()
{}

void setConcentration(int index, double value)
{
	double volume = 0.0;
	_y[index] = value;
	switch (index)
	{
		case 0:
			volume = _c[0];
		break;
		case 1:
			volume = _c[0];
		break;
	}
	_amounts[index] = _y[index]*volume;
}

double getConcentration(int index)
{
	return _y[index];
}

void convertToAmounts()
{
	_amounts[0] = _y[0]*_c[0];
	_amounts[1] = _y[1]*_c[0];
}

void convertToConcentrations()
{
	_y[0] = _amounts[0] / _c[0];
	_y[1] = _amounts[1] / _c[0];
}

int getNumLocalParameters(int reactionId)
{
	return localParameterDimensions[reactionId];
}

void initializeInitialConditions()
{
	_init_y[0] = (double) 0.0001499999999999999869/ _c[0];
	_init_y[1] = (double) 0/ _c[0];
}

void setInitialConditions()
{
	_y[0] =  _init_y[0];
	_amounts[0] = _y[0]*_c[0];

	_y[1] =  _init_y[1];
	_amounts[1] = _y[1]*_c[0];
}

void setBoundaryConditions()
{
}

void setCompartmentVolumes()
{
	_c[0] = (double)1;
	_c[0] = 
	(double)1;
}

void setParameterValues()
{
	_gp[0] = (double)1;
}

// Uses the equation: C = Sd - L0*Si
void computeConservedTotals()
{
	_ct[0] =  + _y[0]*_c[0] + _y[1]*_c[0];
}

// Compute values of dependent species 
// Uses the equation: Sd = C + L0*Si
void updateDependentSpeciesValues(double* y)
{
	_y[1] = (_ct[0] - y[0]*_c[0]) / _c[0];
}

void computeRules(double* y)
{

}

void InitializeRates()
{}

void AssignRatesA()
{
}

void InitializeRateRuleSymbols() 
{}

void AssignRatesB(double oRates[])
{}

double* GetCurrentValues()
{
	double* dResult = (double*) malloc(sizeof(double)*0);
	return dResult;
}

//Uses the equation: dSd/dt = L0 dSi/dt
void computeAllRatesOfChange()
{	int i;

	double* dTemp = (double*) malloc( sizeof(double)* (_amountsSize + _rateRulesSize) );
	for(i = 0; i < _amountsSize; i++)
	{
		dTemp[i + _rateRulesSize] = _amounts[i];
	}
	//amounts.CopyTo(dTemp, rateRules.Length); 
	evalModel(mTime, dTemp);
	_dydt[1] =  - _dydt[0];

}

// Compute the reaction rates
void computeReactionRates(double time, double *y)
{
	_rates[0]=_c[0]*_gp[0]*y[0];
}

//Model Function
void evalModel (double timein, double* oAmounts)
{
	_y[0] = oAmounts[0]/_c[0];

	_y[1] = oAmounts[1]/_c[0];

	convertToAmounts();
	mTime = timein;  // Don't remove
	updateDependentSpeciesValues (_y);
	computeReactionRates (mTime, _y);
	_dydt[0] = - _rates[0];
	convertToAmounts();
}

//Event handling function
void evalEvents(double timeIn, double *oAmounts)
{
	mTime = timeIn;
	updateDependentSpeciesValues(_y);
	computeRules(_y);
}

void InitializeDelays()
{
}

void computeEventPriorities()
{}

void evalInitialAssignments()
{
}

void testConstraints()
{}


//Function to initialize the model data structure. Returns an integer indicating result
int InitModel()
{
	numIndependentVariables = 1;
	numDependentVariables = 1;
	numTotalVariables = 2;
	numBoundaryVariables = 0;
	numGlobalParameters = 1;
	numCompartments = 1;
	numReactions = 1;
	numEvents = 0;
	mModelName = (char*) malloc(sizeof(char)*10);
	strcpy(mModelName,"case00001");
	setCompartmentVolumes();
	InitializeDelays();
	localParameterDimensions[0] = 0;
	_lp[0] = (double*) malloc(sizeof(double)*0);
	return 0;
}


char* GetModelName()
{
	return mModelName;
}
 ----- End of Model Code -----

Compiling model..

Executing compile command: tcc -g -shared -rdynamic /home/totte/rr/runs/test_1.c /usr/local/rr_support/rrSupport.c -o/home/totte/rr/runs/libtest_1.so -I.  -Iinclude  -I/usr/local/rr_support  -L.  -Llib 
Compile system call returned: 0
Model compiled successfully. 
/home/totte/rr/runs/libtest_1.so was created
Trying to load shared lib: /home/totte/rr/runs/libtest_1
Set tolerance to: 1e-12
Set tolerance to: 1e-12
Size of dResult in BuildEvalArgument: 2
Size of dResult in BuildEvalArgument: 2
Set tolerance to: 1e-12
Set tolerance to: 1e-12
Size of dResult in BuildEvalArgument: 2
Size of dResult in BuildEvalArgument: 2
SBML semantics was loaded from file: /r/models/test_1.xml
The following is selected:
A Selection Record --
Index: 0
p1: 
p2: 
SelectionType: 0

A Selection Record --
Index: 0
p1: 
p2: 
SelectionType: 2

A Selection Record --
Index: 1
p1: 
p2: 
SelectionType: 2

Compiling model..

Executing compile command: tcc -g -shared -rdynamic /home/totte/rr/runs/test_1.c /usr/local/rr_support/rrSupport.c -o/home/totte/rr/runs/libtest_1.so -I.  -Iinclude  -I/usr/local/rr_support  -L.  -Llib 
Compile system call returned: 0
Model compiled successfully. 
/home/totte/rr/runs/libtest_1.so was created
Trying to load shared lib: /home/totte/rr/runs/libtest_1
Set tolerance to: 1e-12
Set tolerance to: 1e-12
Size of dResult in BuildEvalArgument: 2
Size of dResult in BuildEvalArgument: 2
Added result row	0 : 	0	0.00015	0
Will run the OneStep function 51 times
Step 1
---------------------------------------------------
--- O N E     S T E P      ( 0 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Count =             32		count = 32	
Count =             33		count = 33	
Count =             34		count = 34	
Count =             35		count = 35	
Count =             36		count = 36	
Count =             37		count = 37	
Count =             38		count = 38	
Amount 0.0001357256144666043
Size of dResult in BuildEvalArgument: 2
tout: 0.1	timeEnd: 0.1
Added result row	1 : 	0.1	0.000135726	1.42744e-05
Step 2
---------------------------------------------------
--- O N E     S T E P      ( 1 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Amount 0.0001228096186525438
Size of dResult in BuildEvalArgument: 2
tout: 0.2	timeEnd: 0.2
Added result row	2 : 	0.2	0.00012281	2.71904e-05
Step 3
---------------------------------------------------
--- O N E     S T E P      ( 2 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 0.0001111227372435336
Size of dResult in BuildEvalArgument: 2
tout: 0.3	timeEnd: 0.3
Added result row	3 : 	0.3	0.000111123	3.88773e-05
Step 4
---------------------------------------------------
--- O N E     S T E P      ( 3 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Amount 0.0001005480087035232
Size of dResult in BuildEvalArgument: 2
tout: 0.4	timeEnd: 0.4
Added result row	4 : 	0.4	0.000100548	4.9452e-05
Step 5
---------------------------------------------------
--- O N E     S T E P      ( 4 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 9.097960082271809e-05
Size of dResult in BuildEvalArgument: 2
tout: 0.5	timeEnd: 0.5
Added result row	5 : 	0.5	9.09796e-05	5.90204e-05
Step 6
---------------------------------------------------
--- O N E     S T E P      ( 5 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 8.232174622244347e-05
Size of dResult in BuildEvalArgument: 2
tout: 0.6	timeEnd: 0.6
Added result row	6 : 	0.6	8.23217e-05	6.76783e-05
Step 7
---------------------------------------------------
--- O N E     S T E P      ( 6 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 7.448779523946881e-05
Size of dResult in BuildEvalArgument: 2
tout: 0.7	timeEnd: 0.7
Added result row	7 : 	0.7	7.44878e-05	7.55122e-05
Step 8
---------------------------------------------------
--- O N E     S T E P      ( 7 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 6.739934619336783e-05
Size of dResult in BuildEvalArgument: 2
tout: 0.8	timeEnd: 0.8
Added result row	8 : 	0.8	6.73993e-05	8.26007e-05
Step 9
---------------------------------------------------
--- O N E     S T E P      ( 8 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 6.098545226348254e-05
Size of dResult in BuildEvalArgument: 2
tout: 0.9	timeEnd: 0.9
Added result row	9 : 	0.9	6.09855e-05	8.90145e-05
Step 10
---------------------------------------------------
--- O N E     S T E P      ( 9 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 5.518191893159396e-05
Size of dResult in BuildEvalArgument: 2
tout: 1	timeEnd: 1
Added result row	10 : 	1	5.51819e-05	9.48181e-05
Step 11
---------------------------------------------------
--- O N E     S T E P      ( 10 ) 
---------------------------------------------------
Count =             0		count = 0	
Amount 4.993066573003667e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.1	timeEnd: 1.1
Added result row	11 : 	1.1	4.99307e-05	0.000100069
Step 12
---------------------------------------------------
--- O N E     S T E P      ( 11 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 4.517913509709669e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.2	timeEnd: 1.2
Added result row	12 : 	1.2	4.51791e-05	0.000104821
Step 13
---------------------------------------------------
--- O N E     S T E P      ( 12 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 4.08797722234435e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.3	timeEnd: 1.3
Added result row	13 : 	1.3	4.08798e-05	0.00010912
Step 14
---------------------------------------------------
--- O N E     S T E P      ( 13 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Count =             32		count = 32	
Count =             33		count = 33	
Count =             34		count = 34	
Count =             35		count = 35	
Count =             36		count = 36	
Count =             37		count = 37	
Amount 3.698954587371265e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.4	timeEnd: 1.4
Added result row	14 : 	1.4	3.69895e-05	0.00011301
Step 15
---------------------------------------------------
--- O N E     S T E P      ( 14 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Amount 3.346952713496203e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.5	timeEnd: 1.5
Added result row	15 : 	1.5	3.34695e-05	0.00011653
Step 16
---------------------------------------------------
--- O N E     S T E P      ( 15 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Count =             32		count = 32	
Count =             33		count = 33	
Count =             34		count = 34	
Count =             35		count = 35	
Count =             36		count = 36	
Amount 3.028447942767524e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.6	timeEnd: 1.6
Added result row	16 : 	1.6	3.02845e-05	0.000119716
Step 17
---------------------------------------------------
--- O N E     S T E P      ( 16 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Amount 2.74025330417613e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.7	timeEnd: 1.7
Added result row	17 : 	1.7	2.74025e-05	0.000122597
Step 18
---------------------------------------------------
--- O N E     S T E P      ( 17 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 2.47948372683324e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.8	timeEnd: 1.8
Added result row	18 : 	1.8	2.47948e-05	0.000125205
Step 19
---------------------------------------------------
--- O N E     S T E P      ( 18 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Count =             32		count = 32	
Count =             33		count = 33	
Count =             34		count = 34	
Count =             35		count = 35	
Amount 2.243529505991811e-05
Size of dResult in BuildEvalArgument: 2
tout: 1.9	timeEnd: 1.9
Added result row	19 : 	1.9	2.24353e-05	0.000127565
Step 20
---------------------------------------------------
--- O N E     S T E P      ( 19 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Amount 2.030029446953251e-05
Size of dResult in BuildEvalArgument: 2
tout: 2	timeEnd: 2
Added result row	20 : 	2	2.03003e-05	0.0001297
Step 21
---------------------------------------------------
--- O N E     S T E P      ( 20 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 1.836846575380231e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.1	timeEnd: 2.1
Added result row	21 : 	2.1	1.83685e-05	0.000131632
Step 22
---------------------------------------------------
--- O N E     S T E P      ( 21 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 1.662047418418123e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.2	timeEnd: 2.2
Added result row	22 : 	2.2	1.66205e-05	0.00013338
Step 23
---------------------------------------------------
--- O N E     S T E P      ( 22 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 1.503882603672694e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.3	timeEnd: 2.3
Added result row	23 : 	2.3	1.50388e-05	0.000134961
Step 24
---------------------------------------------------
--- O N E     S T E P      ( 23 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 1.360769177897328e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.4	timeEnd: 2.4
Added result row	24 : 	2.4	1.36077e-05	0.000136392
Step 25
---------------------------------------------------
--- O N E     S T E P      ( 24 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 1.231274521270669e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.5	timeEnd: 2.5
Added result row	25 : 	2.5	1.23127e-05	0.000137687
Step 26
---------------------------------------------------
--- O N E     S T E P      ( 25 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Amount 1.114103374934062e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.6	timeEnd: 2.6
Added result row	26 : 	2.6	1.1141e-05	0.000138859
Step 27
---------------------------------------------------
--- O N E     S T E P      ( 26 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 1.008082440784768e-05
Size of dResult in BuildEvalArgument: 2
tout: 2.7	timeEnd: 2.7
Added result row	27 : 	2.7	1.00808e-05	0.000139919
Step 28
---------------------------------------------------
--- O N E     S T E P      ( 27 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 9.121506837572704e-06
Size of dResult in BuildEvalArgument: 2
tout: 2.8	timeEnd: 2.8
Added result row	28 : 	2.8	9.12151e-06	0.000140878
Step 29
---------------------------------------------------
--- O N E     S T E P      ( 28 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 8.253480405417131e-06
Size of dResult in BuildEvalArgument: 2
tout: 2.9	timeEnd: 2.9
Added result row	29 : 	2.9	8.25348e-06	0.000141747
Step 30
---------------------------------------------------
--- O N E     S T E P      ( 29 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 7.468056967456823e-06
Size of dResult in BuildEvalArgument: 2
tout: 3	timeEnd: 3
Added result row	30 : 	3	7.46806e-06	0.000142532
Step 31
---------------------------------------------------
--- O N E     S T E P      ( 30 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Count =             32		count = 32	
Count =             33		count = 33	
Count =             34		count = 34	
Amount 6.757376163972683e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.1	timeEnd: 3.1
Added result row	31 : 	3.1	6.75738e-06	0.000143243
Step 32
---------------------------------------------------
--- O N E     S T E P      ( 31 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Amount 6.114328963411014e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.2	timeEnd: 3.2
Added result row	32 : 	3.2	6.11433e-06	0.000143886
Step 33
---------------------------------------------------
--- O N E     S T E P      ( 32 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 5.532475789709677e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.3	timeEnd: 3.3
Added result row	33 : 	3.3	5.53248e-06	0.000144468
Step 34
---------------------------------------------------
--- O N E     S T E P      ( 33 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 5.005990954827585e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.4	timeEnd: 3.4
Added result row	34 : 	3.4	5.00599e-06	0.000144994
Step 35
---------------------------------------------------
--- O N E     S T E P      ( 34 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 4.529607781124539e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.5	timeEnd: 3.5
Added result row	35 : 	3.5	4.52961e-06	0.00014547
Step 36
---------------------------------------------------
--- O N E     S T E P      ( 35 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Count =             7		count = 7	
Count =             8		count = 8	
Count =             9		count = 9	
Count =             10		count = 10	
Count =             11		count = 11	
Count =             12		count = 12	
Count =             13		count = 13	
Count =             14		count = 14	
Count =             15		count = 15	
Count =             16		count = 16	
Count =             17		count = 17	
Count =             18		count = 18	
Count =             19		count = 19	
Count =             20		count = 20	
Count =             21		count = 21	
Count =             22		count = 22	
Count =             23		count = 23	
Count =             24		count = 24	
Count =             25		count = 25	
Count =             26		count = 26	
Count =             27		count = 27	
Count =             28		count = 28	
Count =             29		count = 29	
Count =             30		count = 30	
Count =             31		count = 31	
Amount 4.098553557543649e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.6	timeEnd: 3.6
Added result row	36 : 	3.6	4.09855e-06	0.000145901
Step 37
---------------------------------------------------
--- O N E     S T E P      ( 36 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Amount 3.708525560952108e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.7	timeEnd: 3.7
Added result row	37 : 	3.7	3.70853e-06	0.000146291
Step 38
---------------------------------------------------
--- O N E     S T E P      ( 37 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Count =             3		count = 3	
Count =             4		count = 4	
Count =             5		count = 5	
Count =             6		count = 6	
Amount 3.355614903175398e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.8	timeEnd: 3.8
Added result row	38 : 	3.8	3.35561e-06	0.000146644
Step 39
---------------------------------------------------
--- O N E     S T E P      ( 38 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 3.036286855868683e-06
Size of dResult in BuildEvalArgument: 2
tout: 3.9	timeEnd: 3.9
Added result row	39 : 	3.9	3.03629e-06	0.000146964
Step 40
---------------------------------------------------
--- O N E     S T E P      ( 39 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 2.747345625411128e-06
Size of dResult in BuildEvalArgument: 2
tout: 4	timeEnd: 4
Added result row	40 : 	4	2.74735e-06	0.000147253
Step 41
---------------------------------------------------
--- O N E     S T E P      ( 40 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 2.485900915799248e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.1	timeEnd: 4.1
Added result row	41 : 	4.1	2.4859e-06	0.000147514
Step 42
---------------------------------------------------
--- O N E     S T E P      ( 41 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Count =             2		count = 2	
Amount 2.249335431241791e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.2	timeEnd: 4.2
Added result row	42 : 	4.2	2.24934e-06	0.000147751
Step 43
---------------------------------------------------
--- O N E     S T E P      ( 42 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 2.035282150668365e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.3	timeEnd: 4.3
Added result row	43 : 	4.3	2.03528e-06	0.000147965
Step 44
---------------------------------------------------
--- O N E     S T E P      ( 43 ) 
---------------------------------------------------
Count =             0		count = 0	
Amount 1.841598800997087e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.4	timeEnd: 4.4
Added result row	44 : 	4.4	1.8416e-06	0.000148158
Step 45
---------------------------------------------------
--- O N E     S T E P      ( 44 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 1.666346990234465e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.5	timeEnd: 4.5
Added result row	45 : 	4.5	1.66635e-06	0.000148334
Step 46
---------------------------------------------------
--- O N E     S T E P      ( 45 ) 
---------------------------------------------------
Count =             0		count = 0	
Amount 1.507772612370114e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.6	timeEnd: 4.6
Added result row	46 : 	4.6	1.50777e-06	0.000148492
Step 47
---------------------------------------------------
--- O N E     S T E P      ( 46 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 1.364287946063179e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.7	timeEnd: 4.7
Added result row	47 : 	4.7	1.36429e-06	0.000148636
Step 48
---------------------------------------------------
--- O N E     S T E P      ( 47 ) 
---------------------------------------------------
Count =             0		count = 0	
Count =             1		count = 1	
Amount 1.234456751319549e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.8	timeEnd: 4.8
Added result row	48 : 	4.8	1.23446e-06	0.000148766
Step 49
---------------------------------------------------
--- O N E     S T E P      ( 48 ) 
---------------------------------------------------
Count =             0		count = 0	
Amount 1.116981009222273e-06
Size of dResult in BuildEvalArgument: 2
tout: 4.9	timeEnd: 4.9
Added result row	49 : 	4.9	1.11698e-06	0.000148883
Step 50
---------------------------------------------------
--- O N E     S T E P      ( 49 ) 
---------------------------------------------------
Count =             0		count = 0	
Amount 1.01068587692363e-06
Size of dResult in BuildEvalArgument: 2
tout: 5	timeEnd: 5
Added result row	50 : 	5	1.01069e-06	0.000148989
Simulation done..
Result: (point, time, value)
0	0	0.00015
1	0.1	0.0001357256144666043
2	0.2	0.0001228096186525438
3	0.3	0.0001111227372435336
4	0.4	0.0001005480087035232
5	0.5	9.097960082271809e-05
6	0.6	8.232174622244347e-05
7	0.7	7.448779523946881e-05
8	0.8	6.739934619336783e-05
9	0.9	6.098545226348254e-05
10	1	5.518191893159396e-05
11	1.1	4.993066573003667e-05
12	1.2	4.517913509709669e-05
13	1.3	4.08797722234435e-05
14	1.4	3.698954587371265e-05
15	1.5	3.346952713496203e-05
16	1.6	3.028447942767524e-05
17	1.7	2.74025330417613e-05
18	1.8	2.47948372683324e-05
19	1.9	2.243529505991811e-05
20	2	2.030029446953251e-05
21	2.1	1.836846575380231e-05
22	2.2	1.662047418418123e-05
23	2.3	1.503882603672694e-05
24	2.4	1.360769177897328e-05
25	2.5	1.231274521270669e-05
26	2.6	1.114103374934062e-05
27	2.7	1.008082440784768e-05
28	2.8	9.121506837572704e-06
29	2.9	8.253480405417131e-06
30	3	7.468056967456823e-06
31	3.1	6.757376163972683e-06
32	3.2	6.114328963411014e-06
33	3.3	5.532475789709677e-06
34	3.4	5.005990954827585e-06
35	3.5	4.529607781124539e-06
36	3.6	4.098553557543649e-06
37	3.7	3.708525560952108e-06
38	3.8	3.355614903175398e-06
39	3.9	3.036286855868683e-06
40	4	2.747345625411128e-06
41	4.1	2.485900915799248e-06
42	4.2	2.249335431241791e-06
43	4.3	2.035282150668365e-06
44	4.4	1.841598800997087e-06
45	4.5	1.666346990234465e-06
46	4.6	1.507772612370114e-06
47	4.7	1.364287946063179e-06
48	4.8	1.234456751319549e-06
49	4.9	1.116981009222273e-06
50	5	1.01068587692363e-06
Simulation Data Columns: time S1 S2
Simulation Data =========== 
0	0.00015	0	
0.1	0.000135726	1.42744e-05	
0.2	0.00012281	2.71904e-05	
0.3	0.000111123	3.88773e-05	
0.4	0.000100548	4.9452e-05	
0.5	9.09796e-05	5.90204e-05	
0.6	8.23217e-05	6.76783e-05	
0.7	7.44878e-05	7.55122e-05	
0.8	6.73993e-05	8.26007e-05	
0.9	6.09855e-05	8.90145e-05	
1	5.51819e-05	9.48181e-05	
1.1	4.99307e-05	0.000100069	
1.2	4.51791e-05	0.000104821	
1.3	4.08798e-05	0.00010912	
1.4	3.69895e-05	0.00011301	
1.5	3.34695e-05	0.00011653	
1.6	3.02845e-05	0.000119716	
1.7	2.74025e-05	0.000122597	
1.8	2.47948e-05	0.000125205	
1.9	2.24353e-05	0.000127565	
2	2.03003e-05	0.0001297	
2.1	1.83685e-05	0.000131632	
2.2	1.66205e-05	0.00013338	
2.3	1.50388e-05	0.000134961	
2.4	1.36077e-05	0.000136392	
2.5	1.23127e-05	0.000137687	
2.6	1.1141e-05	0.000138859	
2.7	1.00808e-05	0.000139919	
2.8	9.12151e-06	0.000140878	
2.9	8.25348e-06	0.000141747	
3	7.46806e-06	0.000142532	
3.1	6.75738e-06	0.000143243	
3.2	6.11433e-06	0.000143886	
3.3	5.53248e-06	0.000144468	
3.4	5.00599e-06	0.000144994	
3.5	4.52961e-06	0.00014547	
3.6	4.09855e-06	0.000145901	
3.7	3.70853e-06	0.000146291	
3.8	3.35561e-06	0.000146644	
3.9	3.03629e-06	0.000146964	
4	2.74735e-06	0.000147253	
4.1	2.4859e-06	0.000147514	
4.2	2.24934e-06	0.000147751	
4.3	2.03528e-06	0.000147965	
4.4	1.8416e-06	0.000148158	
4.5	1.66635e-06	0.000148334	
4.6	1.50777e-06	0.000148492	
4.7	1.36429e-06	0.000148636	
4.8	1.23446e-06	0.000148766	
4.9	1.11698e-06	0.000148883	
5	1.01069e-06	0.000148989	

time,S1,S2
0,0.00015,0
0.1,0.0001357256144666043,1.42743855333957e-05
0.2,0.0001228096186525438,2.719038134745623e-05
0.3,0.0001111227372435336,3.887726275646637e-05
0.4,0.0001005480087035232,4.945199129647676e-05
0.5,9.097960082271809e-05,5.90203991772819e-05
0.6,8.232174622244347e-05,6.767825377755652e-05
0.7,7.448779523946881e-05,7.551220476053118e-05
0.8,6.739934619336783e-05,8.260065380663215e-05
0.9,6.098545226348254e-05,8.901454773651744e-05
1,5.518191893159396e-05,9.481808106840602e-05
1.1,4.993066573003667e-05,0.0001000693342699633
1.2,4.517913509709669e-05,0.0001048208649029033
1.3,4.08797722234435e-05,0.0001091202277765565
1.4,3.698954587371265e-05,0.0001130104541262873
1.5,3.346952713496203e-05,0.0001165304728650379
1.6,3.028447942767524e-05,0.0001197155205723248
1.7,2.74025330417613e-05,0.0001225974669582387
1.8,2.47948372683324e-05,0.0001252051627316676
1.9,2.243529505991811e-05,0.0001275647049400819
2,2.030029446953251e-05,0.0001296997055304675
2.1,1.836846575380231e-05,0.0001316315342461977
2.2,1.662047418418123e-05,0.0001333795258158188
2.3,1.503882603672694e-05,0.0001349611739632731
2.4,1.360769177897328e-05,0.0001363923082210267
2.5,1.231274521270669e-05,0.0001376872547872933
2.6,1.114103374934062e-05,0.0001388589662506594
2.7,1.008082440784768e-05,0.0001399191755921523
2.8,9.121506837572704e-06,0.0001408784931624273
2.9,8.253480405417131e-06,0.0001417465195945828
3,7.468056967456823e-06,0.0001425319430325432
3.1,6.757376163972683e-06,0.0001432426238360273
3.2,6.114328963411014e-06,0.000143885671036589
3.3,5.532475789709677e-06,0.0001444675242102903
3.4,5.005990954827585e-06,0.0001449940090451724
3.5,4.529607781124539e-06,0.0001454703922188754
3.6,4.098553557543649e-06,0.0001459014464424563
3.7,3.708525560952108e-06,0.0001462914744390479
3.8,3.355614903175398e-06,0.0001466443850968246
3.9,3.036286855868683e-06,0.0001469637131441313
4,2.747345625411128e-06,0.0001472526543745889
4.1,2.485900915799248e-06,0.0001475140990842007
4.2,2.249335431241791e-06,0.0001477506645687582
4.3,2.035282150668365e-06,0.0001479647178493316
4.4,1.841598800997087e-06,0.0001481584011990029
4.5,1.666346990234465e-06,0.0001483336530097655
4.6,1.507772612370114e-06,0.0001484922273876299
4.7,1.364287946063179e-06,0.0001486357120539368
4.8,1.234456751319549e-06,0.0001487655432486804
4.9,1.116981009222273e-06,0.0001488830189907777
5,1.01068587692363e-06,0.0001489893141230764

In RoadRunner DTOR
RoadRunner is exiting...
