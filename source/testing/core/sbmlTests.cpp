#include "unit_test/UnitTest++.h"
#include "rrLogger.h"
#include "rrRoadRunner.h"
#include "rrException.h"
#include "rrTestSuiteModelSimulation.h"
using namespace UnitTest;
using namespace rr;

extern RoadRunner* 		gRR;
extern string 			gSBMLModelsPath;
extern string 			gCompiler;
extern string 			gSupportCodeFolder;
extern string 			gTempFolder;

extern string 			gTSModelsPath;
extern string 			gTSDataOutPutFolder;
extern vector<string> 	gModels;
bool SBMLTest(const string& version, int number);
SUITE(SBML_l2v4)
{
	TEST(AllocateRR)
	{
		if(!gRR)
		{
			gRR = new RoadRunner(gSupportCodeFolder, gCompiler, gTempFolder);
		}

		CHECK(gRR!=NULL);

		if(!gRR)
		{
        	return;
		}
	}

    TEST(1_980)
    {
		CHECK(SBMLTest("l2v4", 1   ));
		CHECK(SBMLTest("l2v4", 2   ));
		CHECK(SBMLTest("l2v4", 3   ));
		CHECK(SBMLTest("l2v4", 4   ));
		CHECK(SBMLTest("l2v4", 5   ));
		CHECK(SBMLTest("l2v4", 6   ));
		CHECK(SBMLTest("l2v4", 7   ));
		CHECK(SBMLTest("l2v4", 8   ));
		CHECK(SBMLTest("l2v4", 9   ));
		CHECK(SBMLTest("l2v4", 10  ));
		CHECK(SBMLTest("l2v4", 11  ));
		CHECK(SBMLTest("l2v4", 12  ));
		CHECK(SBMLTest("l2v4", 13  ));
		CHECK(SBMLTest("l2v4", 14  ));
		CHECK(SBMLTest("l2v4", 15  ));
		CHECK(SBMLTest("l2v4", 16  ));
		CHECK(SBMLTest("l2v4", 17  ));
		CHECK(SBMLTest("l2v4", 18  ));
		CHECK(SBMLTest("l2v4", 19  ));
		CHECK(SBMLTest("l2v4", 20  ));
		CHECK(SBMLTest("l2v4", 21  ));
		CHECK(SBMLTest("l2v4", 22  ));
		CHECK(SBMLTest("l2v4", 23  ));
		CHECK(SBMLTest("l2v4", 24  ));
		CHECK(SBMLTest("l2v4", 25  ));
//		CHECK(SBMLTest("l2v4", 26  ));
//		CHECK(SBMLTest("l2v4", 27  ));
//		CHECK(SBMLTest("l2v4", 28  ));
//		CHECK(SBMLTest("l2v4", 29  ));
//		CHECK(SBMLTest("l2v4", 30  ));
//		CHECK(SBMLTest("l2v4", 31  ));
//		CHECK(SBMLTest("l2v4", 32  ));
//		CHECK(SBMLTest("l2v4", 33  ));
//		CHECK(SBMLTest("l2v4", 34  ));
//		CHECK(SBMLTest("l2v4", 35  ));
//		CHECK(SBMLTest("l2v4", 36  ));
//		CHECK(SBMLTest("l2v4", 37  ));
//		CHECK(SBMLTest("l2v4", 38  ));
//		CHECK(SBMLTest("l2v4", 39  ));
//		CHECK(SBMLTest("l2v4", 40  ));
//		CHECK(SBMLTest("l2v4", 41  ));
//		CHECK(SBMLTest("l2v4", 42  ));
//		CHECK(SBMLTest("l2v4", 43  ));
//		CHECK(SBMLTest("l2v4", 44  ));
//		CHECK(SBMLTest("l2v4", 45  ));
//		CHECK(SBMLTest("l2v4", 46  ));
//		CHECK(SBMLTest("l2v4", 47  ));
//		CHECK(SBMLTest("l2v4", 48  ));
//		CHECK(SBMLTest("l2v4", 49  ));
//		CHECK(SBMLTest("l2v4", 50  ));
//		CHECK(SBMLTest("l2v4", 51  ));
//		CHECK(SBMLTest("l2v4", 52  ));
//		CHECK(SBMLTest("l2v4", 53  ));
//		CHECK(SBMLTest("l2v4", 54  ));
//		CHECK(SBMLTest("l2v4", 55  ));
//		CHECK(SBMLTest("l2v4", 56  ));
//		CHECK(SBMLTest("l2v4", 57  ));
//		CHECK(SBMLTest("l2v4", 58  ));
//		CHECK(SBMLTest("l2v4", 59  ));
//		CHECK(SBMLTest("l2v4", 60  ));
//		CHECK(SBMLTest("l2v4", 61  ));
//		CHECK(SBMLTest("l2v4", 62  ));
//		CHECK(SBMLTest("l2v4", 63  ));
//		CHECK(SBMLTest("l2v4", 64  ));
//		CHECK(SBMLTest("l2v4", 65  ));
//		CHECK(SBMLTest("l2v4", 66  ));
//		CHECK(SBMLTest("l2v4", 67  ));
//		CHECK(SBMLTest("l2v4", 68  ));
//		CHECK(SBMLTest("l2v4", 69  ));
//		CHECK(SBMLTest("l2v4", 70  ));
//		CHECK(SBMLTest("l2v4", 71  ));
//		CHECK(SBMLTest("l2v4", 72  ));
//		CHECK(SBMLTest("l2v4", 73  ));
//		CHECK(SBMLTest("l2v4", 74  ));
//		CHECK(SBMLTest("l2v4", 75  ));
//		CHECK(SBMLTest("l2v4", 76  ));
//		CHECK(SBMLTest("l2v4", 77  ));
//		CHECK(SBMLTest("l2v4", 78  ));
//		CHECK(SBMLTest("l2v4", 79  ));
//		CHECK(SBMLTest("l2v4", 80  ));
//		CHECK(SBMLTest("l2v4", 81  ));
//		CHECK(SBMLTest("l2v4", 82  ));
//		CHECK(SBMLTest("l2v4", 83  ));
//		CHECK(SBMLTest("l2v4", 84  ));
//		CHECK(SBMLTest("l2v4", 85  ));
//		CHECK(SBMLTest("l2v4", 86  ));
//		CHECK(SBMLTest("l2v4", 87  ));
//		CHECK(SBMLTest("l2v4", 88  ));
//		CHECK(SBMLTest("l2v4", 89  ));
//		CHECK(SBMLTest("l2v4", 90  ));
//		CHECK(SBMLTest("l2v4", 91  ));
//		CHECK(SBMLTest("l2v4", 92  ));
//		CHECK(SBMLTest("l2v4", 93  ));
//		CHECK(SBMLTest("l2v4", 94  ));
//		CHECK(SBMLTest("l2v4", 95  ));
//		CHECK(SBMLTest("l2v4", 96  ));
//		CHECK(SBMLTest("l2v4", 97  ));
//		CHECK(SBMLTest("l2v4", 98  ));
//		CHECK(SBMLTest("l2v4", 99  ));
//		CHECK(SBMLTest("l2v4", 100 ));
//		CHECK(SBMLTest("l2v4", 101 ));
//		CHECK(SBMLTest("l2v4", 102 ));
//		CHECK(SBMLTest("l2v4", 103 ));
//		CHECK(SBMLTest("l2v4", 104 ));
//		CHECK(SBMLTest("l2v4", 105 ));
//		CHECK(SBMLTest("l2v4", 106 ));
//		CHECK(SBMLTest("l2v4", 107 ));
//		CHECK(SBMLTest("l2v4", 108 ));
//		CHECK(SBMLTest("l2v4", 109 ));
//		CHECK(SBMLTest("l2v4", 110 ));
//		CHECK(SBMLTest("l2v4", 111 ));
//		CHECK(SBMLTest("l2v4", 112 ));
//		CHECK(SBMLTest("l2v4", 113 ));
//		CHECK(SBMLTest("l2v4", 114 ));
//		CHECK(SBMLTest("l2v4", 115 ));
//		CHECK(SBMLTest("l2v4", 116 ));
//		CHECK(SBMLTest("l2v4", 117 ));
//		CHECK(SBMLTest("l2v4", 118 ));
//		CHECK(SBMLTest("l2v4", 119 ));
//		CHECK(SBMLTest("l2v4", 120 ));
//		CHECK(SBMLTest("l2v4", 121 ));
//		CHECK(SBMLTest("l2v4", 122 ));
//		CHECK(SBMLTest("l2v4", 123 ));
//		CHECK(SBMLTest("l2v4", 124 ));
//		CHECK(SBMLTest("l2v4", 125 ));
//		CHECK(SBMLTest("l2v4", 126 ));
//		CHECK(SBMLTest("l2v4", 127 ));
//		CHECK(SBMLTest("l2v4", 128 ));
//		CHECK(SBMLTest("l2v4", 129 ));
//		CHECK(SBMLTest("l2v4", 130 ));
//		CHECK(SBMLTest("l2v4", 131 ));
//		CHECK(SBMLTest("l2v4", 132 ));
//		CHECK(SBMLTest("l2v4", 133 ));
//		CHECK(SBMLTest("l2v4", 134 ));
//		CHECK(SBMLTest("l2v4", 135 ));
//		CHECK(SBMLTest("l2v4", 136 ));
//		CHECK(SBMLTest("l2v4", 137 ));
//		CHECK(SBMLTest("l2v4", 138 ));
//		CHECK(SBMLTest("l2v4", 139 ));
//		CHECK(SBMLTest("l2v4", 140 ));
//		CHECK(SBMLTest("l2v4", 141 ));
//		CHECK(SBMLTest("l2v4", 142 ));
//		CHECK(SBMLTest("l2v4", 143 ));
//		CHECK(SBMLTest("l2v4", 144 ));
//		CHECK(SBMLTest("l2v4", 145 ));
//		CHECK(SBMLTest("l2v4", 146 ));
//		CHECK(SBMLTest("l2v4", 147 ));
//		CHECK(SBMLTest("l2v4", 148 ));
//		CHECK(SBMLTest("l2v4", 149 ));
//		CHECK(SBMLTest("l2v4", 150 ));
//		CHECK(SBMLTest("l2v4", 151 ));
//		CHECK(SBMLTest("l2v4", 152 ));
//		CHECK(SBMLTest("l2v4", 153 ));
//		CHECK(SBMLTest("l2v4", 154 ));
//		CHECK(SBMLTest("l2v4", 155 ));
//		CHECK(SBMLTest("l2v4", 156 ));
//		CHECK(SBMLTest("l2v4", 157 ));
//		CHECK(SBMLTest("l2v4", 158 ));
//		CHECK(SBMLTest("l2v4", 159 ));
//		CHECK(SBMLTest("l2v4", 160 ));
//		CHECK(SBMLTest("l2v4", 161 ));
//		CHECK(SBMLTest("l2v4", 162 ));
//		CHECK(SBMLTest("l2v4", 163 ));
//		CHECK(SBMLTest("l2v4", 164 ));
//		CHECK(SBMLTest("l2v4", 165 ));
//		CHECK(SBMLTest("l2v4", 166 ));
//		CHECK(SBMLTest("l2v4", 167 ));
//		CHECK(SBMLTest("l2v4", 168 ));
//		CHECK(SBMLTest("l2v4", 169 ));
//		CHECK(SBMLTest("l2v4", 170 ));
//		CHECK(SBMLTest("l2v4", 171 ));
//		CHECK(SBMLTest("l2v4", 172 ));
//		CHECK(SBMLTest("l2v4", 173 ));
//		CHECK(SBMLTest("l2v4", 174 ));
//		CHECK(SBMLTest("l2v4", 175 ));
//		CHECK(SBMLTest("l2v4", 176 ));
//		CHECK(SBMLTest("l2v4", 177 ));
//		CHECK(SBMLTest("l2v4", 178 ));
//		CHECK(SBMLTest("l2v4", 179 ));
//		CHECK(SBMLTest("l2v4", 180 ));
//		CHECK(SBMLTest("l2v4", 181 ));
//		CHECK(SBMLTest("l2v4", 182 ));
//		CHECK(SBMLTest("l2v4", 183 ));
//		CHECK(SBMLTest("l2v4", 184 ));
//		CHECK(SBMLTest("l2v4", 185 ));
//		CHECK(SBMLTest("l2v4", 186 ));
//		CHECK(SBMLTest("l2v4", 187 ));
//		CHECK(SBMLTest("l2v4", 188 ));
//		CHECK(SBMLTest("l2v4", 189 ));
//		CHECK(SBMLTest("l2v4", 190 ));
//		CHECK(SBMLTest("l2v4", 191 ));
//		CHECK(SBMLTest("l2v4", 192 ));
//		CHECK(SBMLTest("l2v4", 193 ));
//		CHECK(SBMLTest("l2v4", 194 ));
//		CHECK(SBMLTest("l2v4", 195 ));
//		CHECK(SBMLTest("l2v4", 196 ));
//		CHECK(SBMLTest("l2v4", 197 ));
//		CHECK(SBMLTest("l2v4", 198 ));
//		CHECK(SBMLTest("l2v4", 199 ));
//		CHECK(SBMLTest("l2v4", 200 ));
//		CHECK(SBMLTest("l2v4", 201 ));
//		CHECK(SBMLTest("l2v4", 202 ));
//		CHECK(SBMLTest("l2v4", 203 ));
//		CHECK(SBMLTest("l2v4", 204 ));
//		CHECK(SBMLTest("l2v4", 205 ));
//		CHECK(SBMLTest("l2v4", 206 ));
//		CHECK(SBMLTest("l2v4", 207 ));
//		CHECK(SBMLTest("l2v4", 208 ));
//		CHECK(SBMLTest("l2v4", 209 ));
//		CHECK(SBMLTest("l2v4", 210 ));
//		CHECK(SBMLTest("l2v4", 211 ));
//		CHECK(SBMLTest("l2v4", 212 ));
//		CHECK(SBMLTest("l2v4", 213 ));
//		CHECK(SBMLTest("l2v4", 214 ));
//		CHECK(SBMLTest("l2v4", 215 ));
//		CHECK(SBMLTest("l2v4", 216 ));
//		CHECK(SBMLTest("l2v4", 217 ));
//		CHECK(SBMLTest("l2v4", 218 ));
//		CHECK(SBMLTest("l2v4", 219 ));
//		CHECK(SBMLTest("l2v4", 220 ));
//		CHECK(SBMLTest("l2v4", 221 ));
//		CHECK(SBMLTest("l2v4", 222 ));
//		CHECK(SBMLTest("l2v4", 223 ));
//		CHECK(SBMLTest("l2v4", 224 ));
//		CHECK(SBMLTest("l2v4", 225 ));
//		CHECK(SBMLTest("l2v4", 226 ));
//		CHECK(SBMLTest("l2v4", 227 ));
//		CHECK(SBMLTest("l2v4", 228 ));
//		CHECK(SBMLTest("l2v4", 229 ));
//		CHECK(SBMLTest("l2v4", 230 ));
//		CHECK(SBMLTest("l2v4", 231 ));
//		CHECK(SBMLTest("l2v4", 232 ));
//		CHECK(SBMLTest("l2v4", 233 ));
//		CHECK(SBMLTest("l2v4", 234 ));
//		CHECK(SBMLTest("l2v4", 235 ));
//		CHECK(SBMLTest("l2v4", 236 ));
//		CHECK(SBMLTest("l2v4", 237 ));
//		CHECK(SBMLTest("l2v4", 238 ));
//		CHECK(SBMLTest("l2v4", 239 ));
//		CHECK(SBMLTest("l2v4", 240 ));
//		CHECK(SBMLTest("l2v4", 241 ));
//		CHECK(SBMLTest("l2v4", 242 ));
//		CHECK(SBMLTest("l2v4", 243 ));
//		CHECK(SBMLTest("l2v4", 244 ));
//		CHECK(SBMLTest("l2v4", 245 ));
//		CHECK(SBMLTest("l2v4", 246 ));
//		CHECK(SBMLTest("l2v4", 247 ));
//		CHECK(SBMLTest("l2v4", 248 ));
//		CHECK(SBMLTest("l2v4", 249 ));
//		CHECK(SBMLTest("l2v4", 250 ));
//		CHECK(SBMLTest("l2v4", 251 ));
//		CHECK(SBMLTest("l2v4", 252 ));
//		CHECK(SBMLTest("l2v4", 253 ));
//		CHECK(SBMLTest("l2v4", 254 ));
//		CHECK(SBMLTest("l2v4", 255 ));
//		CHECK(SBMLTest("l2v4", 256 ));
//		CHECK(SBMLTest("l2v4", 257 ));
//		CHECK(SBMLTest("l2v4", 258 ));
//		CHECK(SBMLTest("l2v4", 259 ));
//		CHECK(SBMLTest("l2v4", 260 ));
//		CHECK(SBMLTest("l2v4", 261 ));
//		CHECK(SBMLTest("l2v4", 262 ));
//		CHECK(SBMLTest("l2v4", 263 ));
//		CHECK(SBMLTest("l2v4", 264 ));
//		CHECK(SBMLTest("l2v4", 265 ));
//		CHECK(SBMLTest("l2v4", 266 ));
//		CHECK(SBMLTest("l2v4", 267 ));
//		CHECK(SBMLTest("l2v4", 268 ));
//		CHECK(SBMLTest("l2v4", 269 ));
//		CHECK(SBMLTest("l2v4", 270 ));
//		CHECK(SBMLTest("l2v4", 271 ));
//		CHECK(SBMLTest("l2v4", 272 ));
//		CHECK(SBMLTest("l2v4", 273 ));
//		CHECK(SBMLTest("l2v4", 274 ));
//		CHECK(SBMLTest("l2v4", 275 ));
//		CHECK(SBMLTest("l2v4", 276 ));
//		CHECK(SBMLTest("l2v4", 277 ));
//		CHECK(SBMLTest("l2v4", 278 ));
//		CHECK(SBMLTest("l2v4", 279 ));
//		CHECK(SBMLTest("l2v4", 280 ));
//		CHECK(SBMLTest("l2v4", 281 ));
//		CHECK(SBMLTest("l2v4", 282 ));
//		CHECK(SBMLTest("l2v4", 283 ));
//		CHECK(SBMLTest("l2v4", 284 ));
//		CHECK(SBMLTest("l2v4", 285 ));
//		CHECK(SBMLTest("l2v4", 286 ));
//		CHECK(SBMLTest("l2v4", 287 ));
//		CHECK(SBMLTest("l2v4", 288 ));
//		CHECK(SBMLTest("l2v4", 289 ));
//		CHECK(SBMLTest("l2v4", 290 ));
//		CHECK(SBMLTest("l2v4", 291 ));
//		CHECK(SBMLTest("l2v4", 292 ));
//		CHECK(SBMLTest("l2v4", 293 ));
//		CHECK(SBMLTest("l2v4", 294 ));
//		CHECK(SBMLTest("l2v4", 295 ));
//		CHECK(SBMLTest("l2v4", 296 ));
//		CHECK(SBMLTest("l2v4", 297 ));
//		CHECK(SBMLTest("l2v4", 298 ));
//		CHECK(SBMLTest("l2v4", 299 ));
//		CHECK(SBMLTest("l2v4", 300 ));
//		CHECK(SBMLTest("l2v4", 301 ));
//		CHECK(SBMLTest("l2v4", 302 ));
//		CHECK(SBMLTest("l2v4", 303 ));
//		CHECK(SBMLTest("l2v4", 304 ));
//		CHECK(SBMLTest("l2v4", 305 ));
//		CHECK(SBMLTest("l2v4", 306 ));
//		CHECK(SBMLTest("l2v4", 307 ));
//		CHECK(SBMLTest("l2v4", 308 ));
//		CHECK(SBMLTest("l2v4", 309 ));
//		CHECK(SBMLTest("l2v4", 310 ));
//		CHECK(SBMLTest("l2v4", 311 ));
//		CHECK(SBMLTest("l2v4", 312 ));
//		CHECK(SBMLTest("l2v4", 313 ));
//		CHECK(SBMLTest("l2v4", 314 ));
//		CHECK(SBMLTest("l2v4", 315 ));
//		CHECK(SBMLTest("l2v4", 316 ));
//		CHECK(SBMLTest("l2v4", 317 ));
//		CHECK(SBMLTest("l2v4", 318 ));
//		CHECK(SBMLTest("l2v4", 319 ));
//		CHECK(SBMLTest("l2v4", 320 ));
//		CHECK(SBMLTest("l2v4", 321 ));
//		CHECK(SBMLTest("l2v4", 322 ));
//		CHECK(SBMLTest("l2v4", 323 ));
//		CHECK(SBMLTest("l2v4", 324 ));
//		CHECK(SBMLTest("l2v4", 325 ));
//		CHECK(SBMLTest("l2v4", 326 ));
//		CHECK(SBMLTest("l2v4", 327 ));
//		CHECK(SBMLTest("l2v4", 328 ));
//		CHECK(SBMLTest("l2v4", 329 ));
//		CHECK(SBMLTest("l2v4", 330 ));
//		CHECK(SBMLTest("l2v4", 331 ));
//		CHECK(SBMLTest("l2v4", 332 ));
//		CHECK(SBMLTest("l2v4", 333 ));
//		CHECK(SBMLTest("l2v4", 334 ));
//		CHECK(SBMLTest("l2v4", 335 ));
//		CHECK(SBMLTest("l2v4", 336 ));
//		CHECK(SBMLTest("l2v4", 337 ));
//		CHECK(SBMLTest("l2v4", 338 ));
//		CHECK(SBMLTest("l2v4", 339 ));
//		CHECK(SBMLTest("l2v4", 340 ));
//		CHECK(SBMLTest("l2v4", 341 ));
//		CHECK(SBMLTest("l2v4", 342 ));
//		CHECK(SBMLTest("l2v4", 343 ));
//		CHECK(SBMLTest("l2v4", 344 ));
//		CHECK(SBMLTest("l2v4", 345 ));
//		CHECK(SBMLTest("l2v4", 346 ));
//		CHECK(SBMLTest("l2v4", 347 ));
//		CHECK(SBMLTest("l2v4", 348 ));
//		CHECK(SBMLTest("l2v4", 349 ));
//		CHECK(SBMLTest("l2v4", 350 ));
//		CHECK(SBMLTest("l2v4", 351 ));
//		CHECK(SBMLTest("l2v4", 352 ));
//		CHECK(SBMLTest("l2v4", 353 ));
//		CHECK(SBMLTest("l2v4", 354 ));
//		CHECK(SBMLTest("l2v4", 355 ));
//		CHECK(SBMLTest("l2v4", 356 ));
//		CHECK(SBMLTest("l2v4", 357 ));
//		CHECK(SBMLTest("l2v4", 358 ));
//		CHECK(SBMLTest("l2v4", 359 ));
//		CHECK(SBMLTest("l2v4", 360 ));
//		CHECK(SBMLTest("l2v4", 361 ));
//		CHECK(SBMLTest("l2v4", 362 ));
//		CHECK(SBMLTest("l2v4", 363 ));
//		CHECK(SBMLTest("l2v4", 364 ));
//		CHECK(SBMLTest("l2v4", 365 ));
//		CHECK(SBMLTest("l2v4", 366 ));
//		CHECK(SBMLTest("l2v4", 367 ));
//		CHECK(SBMLTest("l2v4", 368 ));
//		CHECK(SBMLTest("l2v4", 369 ));
//		CHECK(SBMLTest("l2v4", 370 ));
//		CHECK(SBMLTest("l2v4", 371 ));
//		CHECK(SBMLTest("l2v4", 372 ));
//		CHECK(SBMLTest("l2v4", 373 ));
//		CHECK(SBMLTest("l2v4", 374 ));
//		CHECK(SBMLTest("l2v4", 375 ));
//		CHECK(SBMLTest("l2v4", 376 ));
//		CHECK(SBMLTest("l2v4", 377 ));
//		CHECK(SBMLTest("l2v4", 378 ));
//		CHECK(SBMLTest("l2v4", 379 ));
//		CHECK(SBMLTest("l2v4", 380 ));
//		CHECK(SBMLTest("l2v4", 381 ));
//		CHECK(SBMLTest("l2v4", 382 ));
//		CHECK(SBMLTest("l2v4", 383 ));
//		CHECK(SBMLTest("l2v4", 384 ));
//		CHECK(SBMLTest("l2v4", 385 ));
//		CHECK(SBMLTest("l2v4", 386 ));
//		CHECK(SBMLTest("l2v4", 387 ));
//		CHECK(SBMLTest("l2v4", 388 ));
//		CHECK(SBMLTest("l2v4", 389 ));
//		CHECK(SBMLTest("l2v4", 390 ));
//		CHECK(SBMLTest("l2v4", 391 ));
//		CHECK(SBMLTest("l2v4", 392 ));
//		CHECK(SBMLTest("l2v4", 393 ));
//		CHECK(SBMLTest("l2v4", 394 ));
//		CHECK(SBMLTest("l2v4", 395 ));
//		CHECK(SBMLTest("l2v4", 396 ));
//		CHECK(SBMLTest("l2v4", 397 ));
//		CHECK(SBMLTest("l2v4", 398 ));
//		CHECK(SBMLTest("l2v4", 399 ));
//		CHECK(SBMLTest("l2v4", 400 ));
//		CHECK(SBMLTest("l2v4", 401 ));
//		CHECK(SBMLTest("l2v4", 402 ));
//		CHECK(SBMLTest("l2v4", 403 ));
//		CHECK(SBMLTest("l2v4", 404 ));
//		CHECK(SBMLTest("l2v4", 405 ));
//		CHECK(SBMLTest("l2v4", 406 ));
//		CHECK(SBMLTest("l2v4", 407 ));
//		CHECK(SBMLTest("l2v4", 408 ));
//		CHECK(SBMLTest("l2v4", 409 ));
//		CHECK(SBMLTest("l2v4", 410 ));
//		CHECK(SBMLTest("l2v4", 411 ));
//		CHECK(SBMLTest("l2v4", 412 ));
//		CHECK(SBMLTest("l2v4", 413 ));
//		CHECK(SBMLTest("l2v4", 414 ));
//		CHECK(SBMLTest("l2v4", 415 ));
//		CHECK(SBMLTest("l2v4", 416 ));
//		CHECK(SBMLTest("l2v4", 417 ));
//		CHECK(SBMLTest("l2v4", 418 ));
//		CHECK(SBMLTest("l2v4", 419 ));
//		CHECK(SBMLTest("l2v4", 420 ));
//		CHECK(SBMLTest("l2v4", 421 ));
//		CHECK(SBMLTest("l2v4", 422 ));
//		CHECK(SBMLTest("l2v4", 423 ));
//		CHECK(SBMLTest("l2v4", 424 ));
//		CHECK(SBMLTest("l2v4", 425 ));
//		CHECK(SBMLTest("l2v4", 426 ));
//		CHECK(SBMLTest("l2v4", 427 ));
//		CHECK(SBMLTest("l2v4", 428 ));
//		CHECK(SBMLTest("l2v4", 429 ));
//		CHECK(SBMLTest("l2v4", 430 ));
//		CHECK(SBMLTest("l2v4", 431 ));
//		CHECK(SBMLTest("l2v4", 432 ));
//		CHECK(SBMLTest("l2v4", 433 ));
//		CHECK(SBMLTest("l2v4", 434 ));
//		CHECK(SBMLTest("l2v4", 435 ));
//		CHECK(SBMLTest("l2v4", 436 ));
//		CHECK(SBMLTest("l2v4", 437 ));
//		CHECK(SBMLTest("l2v4", 438 ));
//		CHECK(SBMLTest("l2v4", 439 ));
//		CHECK(SBMLTest("l2v4", 440 ));
//		CHECK(SBMLTest("l2v4", 441 ));
//		CHECK(SBMLTest("l2v4", 442 ));
//		CHECK(SBMLTest("l2v4", 443 ));
//		CHECK(SBMLTest("l2v4", 444 ));
//		CHECK(SBMLTest("l2v4", 445 ));
//		CHECK(SBMLTest("l2v4", 446 ));
//		CHECK(SBMLTest("l2v4", 447 ));
//		CHECK(SBMLTest("l2v4", 448 ));
//		CHECK(SBMLTest("l2v4", 449 ));
//		CHECK(SBMLTest("l2v4", 450 ));
//		CHECK(SBMLTest("l2v4", 451 ));
//		CHECK(SBMLTest("l2v4", 452 ));
//		CHECK(SBMLTest("l2v4", 453 ));
//		CHECK(SBMLTest("l2v4", 454 ));
//		CHECK(SBMLTest("l2v4", 455 ));
//		CHECK(SBMLTest("l2v4", 456 ));
//		CHECK(SBMLTest("l2v4", 457 ));
//		CHECK(SBMLTest("l2v4", 458 ));
//		CHECK(SBMLTest("l2v4", 459 ));
//		CHECK(SBMLTest("l2v4", 460 ));
//		CHECK(SBMLTest("l2v4", 461 ));
//		CHECK(SBMLTest("l2v4", 462 ));
//		CHECK(SBMLTest("l2v4", 463 ));
//		CHECK(SBMLTest("l2v4", 464 ));
//		CHECK(SBMLTest("l2v4", 465 ));
//		CHECK(SBMLTest("l2v4", 466 ));
//		CHECK(SBMLTest("l2v4", 467 ));
//		CHECK(SBMLTest("l2v4", 468 ));
//		CHECK(SBMLTest("l2v4", 469 ));
//		CHECK(SBMLTest("l2v4", 470 ));
//		CHECK(SBMLTest("l2v4", 471 ));
//		CHECK(SBMLTest("l2v4", 472 ));
//		CHECK(SBMLTest("l2v4", 473 ));
//		CHECK(SBMLTest("l2v4", 474 ));
//		CHECK(SBMLTest("l2v4", 475 ));
//		CHECK(SBMLTest("l2v4", 476 ));
//		CHECK(SBMLTest("l2v4", 477 ));
//		CHECK(SBMLTest("l2v4", 478 ));
//		CHECK(SBMLTest("l2v4", 479 ));
//		CHECK(SBMLTest("l2v4", 480 ));
//		CHECK(SBMLTest("l2v4", 481 ));
//		CHECK(SBMLTest("l2v4", 482 ));
//		CHECK(SBMLTest("l2v4", 483 ));
//		CHECK(SBMLTest("l2v4", 484 ));
//		CHECK(SBMLTest("l2v4", 485 ));
//		CHECK(SBMLTest("l2v4", 486 ));
//		CHECK(SBMLTest("l2v4", 487 ));
//		CHECK(SBMLTest("l2v4", 488 ));
//		CHECK(SBMLTest("l2v4", 489 ));
//		CHECK(SBMLTest("l2v4", 490 ));
//		CHECK(SBMLTest("l2v4", 491 ));
//		CHECK(SBMLTest("l2v4", 492 ));
//		CHECK(SBMLTest("l2v4", 493 ));
//		CHECK(SBMLTest("l2v4", 494 ));
//		CHECK(SBMLTest("l2v4", 495 ));
//		CHECK(SBMLTest("l2v4", 496 ));
//		CHECK(SBMLTest("l2v4", 497 ));
//		CHECK(SBMLTest("l2v4", 498 ));
//		CHECK(SBMLTest("l2v4", 499 ));
//		CHECK(SBMLTest("l2v4", 500 ));
//		CHECK(SBMLTest("l2v4", 501 ));
//		CHECK(SBMLTest("l2v4", 502 ));
//		CHECK(SBMLTest("l2v4", 503 ));
//		CHECK(SBMLTest("l2v4", 504 ));
//		CHECK(SBMLTest("l2v4", 505 ));
//		CHECK(SBMLTest("l2v4", 506 ));
//		CHECK(SBMLTest("l2v4", 507 ));
//		CHECK(SBMLTest("l2v4", 508 ));
//		CHECK(SBMLTest("l2v4", 509 ));
//		CHECK(SBMLTest("l2v4", 510 ));
//		CHECK(SBMLTest("l2v4", 511 ));
//		CHECK(SBMLTest("l2v4", 512 ));
//		CHECK(SBMLTest("l2v4", 513 ));
//		CHECK(SBMLTest("l2v4", 514 ));
//		CHECK(SBMLTest("l2v4", 515 ));
//		CHECK(SBMLTest("l2v4", 516 ));
//		CHECK(SBMLTest("l2v4", 517 ));
//		CHECK(SBMLTest("l2v4", 518 ));
//		CHECK(SBMLTest("l2v4", 519 ));
//		CHECK(SBMLTest("l2v4", 520 ));
//		CHECK(SBMLTest("l2v4", 521 ));
//		CHECK(SBMLTest("l2v4", 522 ));
//		CHECK(SBMLTest("l2v4", 523 ));
//		CHECK(SBMLTest("l2v4", 524 ));
//		CHECK(SBMLTest("l2v4", 525 ));
//		CHECK(SBMLTest("l2v4", 526 ));
//		CHECK(SBMLTest("l2v4", 527 ));
//		CHECK(SBMLTest("l2v4", 528 ));
//		CHECK(SBMLTest("l2v4", 529 ));
//		CHECK(SBMLTest("l2v4", 530 ));
//		CHECK(SBMLTest("l2v4", 531 ));
//		CHECK(SBMLTest("l2v4", 532 ));
//		CHECK(SBMLTest("l2v4", 533 ));
//		CHECK(SBMLTest("l2v4", 534 ));
//		CHECK(SBMLTest("l2v4", 535 ));
//		CHECK(SBMLTest("l2v4", 536 ));
//		CHECK(SBMLTest("l2v4", 537 ));
//		CHECK(SBMLTest("l2v4", 538 ));
//		CHECK(SBMLTest("l2v4", 539 ));
//		CHECK(SBMLTest("l2v4", 540 ));
//		CHECK(SBMLTest("l2v4", 541 ));
//		CHECK(SBMLTest("l2v4", 542 ));
//		CHECK(SBMLTest("l2v4", 543 ));
//		CHECK(SBMLTest("l2v4", 544 ));
//		CHECK(SBMLTest("l2v4", 545 ));
//		CHECK(SBMLTest("l2v4", 546 ));
//		CHECK(SBMLTest("l2v4", 547 ));
//		CHECK(SBMLTest("l2v4", 548 ));
//		CHECK(SBMLTest("l2v4", 549 ));
//		CHECK(SBMLTest("l2v4", 550 ));
//		CHECK(SBMLTest("l2v4", 551 ));
//		CHECK(SBMLTest("l2v4", 552 ));
//		CHECK(SBMLTest("l2v4", 553 ));
//		CHECK(SBMLTest("l2v4", 554 ));
//		CHECK(SBMLTest("l2v4", 555 ));
//		CHECK(SBMLTest("l2v4", 556 ));
//		CHECK(SBMLTest("l2v4", 557 ));
//		CHECK(SBMLTest("l2v4", 558 ));
//		CHECK(SBMLTest("l2v4", 559 ));
//		CHECK(SBMLTest("l2v4", 560 ));
//		CHECK(SBMLTest("l2v4", 561 ));
//		CHECK(SBMLTest("l2v4", 562 ));
//		CHECK(SBMLTest("l2v4", 563 ));
//		CHECK(SBMLTest("l2v4", 564 ));
//		CHECK(SBMLTest("l2v4", 565 ));
//		CHECK(SBMLTest("l2v4", 566 ));
//		CHECK(SBMLTest("l2v4", 567 ));
//		CHECK(SBMLTest("l2v4", 568 ));
//		CHECK(SBMLTest("l2v4", 569 ));
//		CHECK(SBMLTest("l2v4", 570 ));
//		CHECK(SBMLTest("l2v4", 571 ));
//		CHECK(SBMLTest("l2v4", 572 ));
//		CHECK(SBMLTest("l2v4", 573 ));
//		CHECK(SBMLTest("l2v4", 574 ));
//		CHECK(SBMLTest("l2v4", 575 ));
//		CHECK(SBMLTest("l2v4", 576 ));
//		CHECK(SBMLTest("l2v4", 577 ));
//		CHECK(SBMLTest("l2v4", 578 ));
//		CHECK(SBMLTest("l2v4", 579 ));
//		CHECK(SBMLTest("l2v4", 580 ));
//		CHECK(SBMLTest("l2v4", 581 ));
//		CHECK(SBMLTest("l2v4", 582 ));
//		CHECK(SBMLTest("l2v4", 583 ));
//		CHECK(SBMLTest("l2v4", 584 ));
//		CHECK(SBMLTest("l2v4", 585 ));
//		CHECK(SBMLTest("l2v4", 586 ));
//		CHECK(SBMLTest("l2v4", 587 ));
//		CHECK(SBMLTest("l2v4", 588 ));
//		CHECK(SBMLTest("l2v4", 589 ));
//		CHECK(SBMLTest("l2v4", 590 ));
//		CHECK(SBMLTest("l2v4", 591 ));
//		CHECK(SBMLTest("l2v4", 592 ));
//		CHECK(SBMLTest("l2v4", 593 ));
//		CHECK(SBMLTest("l2v4", 594 ));
//		CHECK(SBMLTest("l2v4", 595 ));
//		CHECK(SBMLTest("l2v4", 596 ));
//		CHECK(SBMLTest("l2v4", 597 ));
//		CHECK(SBMLTest("l2v4", 598 ));
//		CHECK(SBMLTest("l2v4", 599 ));
//		CHECK(SBMLTest("l2v4", 600 ));
//		CHECK(SBMLTest("l2v4", 601 ));
//		CHECK(SBMLTest("l2v4", 602 ));
//		CHECK(SBMLTest("l2v4", 603 ));
//		CHECK(SBMLTest("l2v4", 604 ));
//		CHECK(SBMLTest("l2v4", 605 ));
//		CHECK(SBMLTest("l2v4", 606 ));
//		CHECK(SBMLTest("l2v4", 607 ));
//		CHECK(SBMLTest("l2v4", 608 ));
//		CHECK(SBMLTest("l2v4", 609 ));
//		CHECK(SBMLTest("l2v4", 610 ));
//		CHECK(SBMLTest("l2v4", 611 ));
//		CHECK(SBMLTest("l2v4", 612 ));
//		CHECK(SBMLTest("l2v4", 613 ));
//		CHECK(SBMLTest("l2v4", 614 ));
//		CHECK(SBMLTest("l2v4", 615 ));
//		CHECK(SBMLTest("l2v4", 616 ));
//		CHECK(SBMLTest("l2v4", 617 ));
//		CHECK(SBMLTest("l2v4", 618 ));
//		CHECK(SBMLTest("l2v4", 619 ));
//		CHECK(SBMLTest("l2v4", 620 ));
//		CHECK(SBMLTest("l2v4", 621 ));
//		CHECK(SBMLTest("l2v4", 622 ));
//		CHECK(SBMLTest("l2v4", 623 ));
//		CHECK(SBMLTest("l2v4", 624 ));
//		CHECK(SBMLTest("l2v4", 625 ));
//		CHECK(SBMLTest("l2v4", 626 ));
//		CHECK(SBMLTest("l2v4", 627 ));
//		CHECK(SBMLTest("l2v4", 628 ));
//		CHECK(SBMLTest("l2v4", 629 ));
//		CHECK(SBMLTest("l2v4", 630 ));
//		CHECK(SBMLTest("l2v4", 631 ));
//		CHECK(SBMLTest("l2v4", 632 ));
//		CHECK(SBMLTest("l2v4", 633 ));
//		CHECK(SBMLTest("l2v4", 634 ));
//		CHECK(SBMLTest("l2v4", 635 ));
//		CHECK(SBMLTest("l2v4", 636 ));
//		CHECK(SBMLTest("l2v4", 637 ));
//		CHECK(SBMLTest("l2v4", 638 ));
//		CHECK(SBMLTest("l2v4", 639 ));
//		CHECK(SBMLTest("l2v4", 640 ));
//		CHECK(SBMLTest("l2v4", 641 ));
//		CHECK(SBMLTest("l2v4", 642 ));
//		CHECK(SBMLTest("l2v4", 643 ));
//		CHECK(SBMLTest("l2v4", 644 ));
//		CHECK(SBMLTest("l2v4", 645 ));
//		CHECK(SBMLTest("l2v4", 646 ));
//		CHECK(SBMLTest("l2v4", 647 ));
//		CHECK(SBMLTest("l2v4", 648 ));
//		CHECK(SBMLTest("l2v4", 649 ));
//		CHECK(SBMLTest("l2v4", 650 ));
//		CHECK(SBMLTest("l2v4", 651 ));
//		CHECK(SBMLTest("l2v4", 652 ));
//		CHECK(SBMLTest("l2v4", 653 ));
//		CHECK(SBMLTest("l2v4", 654 ));
//		CHECK(SBMLTest("l2v4", 655 ));
//		CHECK(SBMLTest("l2v4", 656 ));
//		CHECK(SBMLTest("l2v4", 657 ));
//		CHECK(SBMLTest("l2v4", 658 ));
//		CHECK(SBMLTest("l2v4", 659 ));
//		CHECK(SBMLTest("l2v4", 660 ));
//		CHECK(SBMLTest("l2v4", 661 ));
//		CHECK(SBMLTest("l2v4", 662 ));
//		CHECK(SBMLTest("l2v4", 663 ));
//		CHECK(SBMLTest("l2v4", 664 ));
//		CHECK(SBMLTest("l2v4", 665 ));
//		CHECK(SBMLTest("l2v4", 666 ));
//		CHECK(SBMLTest("l2v4", 667 ));
//		CHECK(SBMLTest("l2v4", 668 ));
//		CHECK(SBMLTest("l2v4", 669 ));
//		CHECK(SBMLTest("l2v4", 670 ));
//		CHECK(SBMLTest("l2v4", 671 ));
//		CHECK(SBMLTest("l2v4", 672 ));
//		CHECK(SBMLTest("l2v4", 673 ));
//		CHECK(SBMLTest("l2v4", 674 ));
//		CHECK(SBMLTest("l2v4", 675 ));
//		CHECK(SBMLTest("l2v4", 676 ));
//		CHECK(SBMLTest("l2v4", 677 ));
//		CHECK(SBMLTest("l2v4", 678 ));
//		CHECK(SBMLTest("l2v4", 679 ));
//		CHECK(SBMLTest("l2v4", 680 ));
//		CHECK(SBMLTest("l2v4", 681 ));
//		CHECK(SBMLTest("l2v4", 682 ));
//		CHECK(SBMLTest("l2v4", 683 ));
//		CHECK(SBMLTest("l2v4", 684 ));
//		CHECK(SBMLTest("l2v4", 685 ));
//		CHECK(SBMLTest("l2v4", 686 ));
//		CHECK(SBMLTest("l2v4", 687 ));
//		CHECK(SBMLTest("l2v4", 688 ));
//		CHECK(SBMLTest("l2v4", 689 ));
//		CHECK(SBMLTest("l2v4", 690 ));
//		CHECK(SBMLTest("l2v4", 691 ));
//		CHECK(SBMLTest("l2v4", 692 ));
//		CHECK(SBMLTest("l2v4", 693 ));
//		CHECK(SBMLTest("l2v4", 694 ));
//		CHECK(SBMLTest("l2v4", 695 ));
//		CHECK(SBMLTest("l2v4", 696 ));
//		CHECK(SBMLTest("l2v4", 697 ));
//		CHECK(SBMLTest("l2v4", 698 ));
//		CHECK(SBMLTest("l2v4", 699 ));
//		CHECK(SBMLTest("l2v4", 700 ));
//		CHECK(SBMLTest("l2v4", 701 ));
//		CHECK(SBMLTest("l2v4", 702 ));
//		CHECK(SBMLTest("l2v4", 703 ));
//		CHECK(SBMLTest("l2v4", 704 ));
//		CHECK(SBMLTest("l2v4", 705 ));
//		CHECK(SBMLTest("l2v4", 706 ));
//		CHECK(SBMLTest("l2v4", 707 ));
//		CHECK(SBMLTest("l2v4", 708 ));
//		CHECK(SBMLTest("l2v4", 709 ));
//		CHECK(SBMLTest("l2v4", 710 ));
//		CHECK(SBMLTest("l2v4", 711 ));
//		CHECK(SBMLTest("l2v4", 712 ));
//		CHECK(SBMLTest("l2v4", 713 ));
//		CHECK(SBMLTest("l2v4", 714 ));
//		CHECK(SBMLTest("l2v4", 715 ));
//		CHECK(SBMLTest("l2v4", 716 ));
//		CHECK(SBMLTest("l2v4", 717 ));
//		CHECK(SBMLTest("l2v4", 718 ));
//		CHECK(SBMLTest("l2v4", 719 ));
//		CHECK(SBMLTest("l2v4", 720 ));
//		CHECK(SBMLTest("l2v4", 721 ));
//		CHECK(SBMLTest("l2v4", 722 ));
//		CHECK(SBMLTest("l2v4", 723 ));
//		CHECK(SBMLTest("l2v4", 724 ));
//		CHECK(SBMLTest("l2v4", 725 ));
//		CHECK(SBMLTest("l2v4", 726 ));
//		CHECK(SBMLTest("l2v4", 727 ));
//		CHECK(SBMLTest("l2v4", 728 ));
//		CHECK(SBMLTest("l2v4", 729 ));
//		CHECK(SBMLTest("l2v4", 730 ));
//		CHECK(SBMLTest("l2v4", 731 ));
//		CHECK(SBMLTest("l2v4", 732 ));
//		CHECK(SBMLTest("l2v4", 733 ));
//		CHECK(SBMLTest("l2v4", 734 ));
//		CHECK(SBMLTest("l2v4", 735 ));
//		CHECK(SBMLTest("l2v4", 736 ));
//		CHECK(SBMLTest("l2v4", 737 ));
//		CHECK(SBMLTest("l2v4", 738 ));
//		CHECK(SBMLTest("l2v4", 739 ));
//		CHECK(SBMLTest("l2v4", 740 ));
//		CHECK(SBMLTest("l2v4", 741 ));
//		CHECK(SBMLTest("l2v4", 742 ));
//		CHECK(SBMLTest("l2v4", 743 ));
//		CHECK(SBMLTest("l2v4", 744 ));
//		CHECK(SBMLTest("l2v4", 745 ));
//		CHECK(SBMLTest("l2v4", 746 ));
//		CHECK(SBMLTest("l2v4", 747 ));
//		CHECK(SBMLTest("l2v4", 748 ));
//		CHECK(SBMLTest("l2v4", 749 ));
//		CHECK(SBMLTest("l2v4", 750 ));
//		CHECK(SBMLTest("l2v4", 751 ));
//		CHECK(SBMLTest("l2v4", 752 ));
//		CHECK(SBMLTest("l2v4", 753 ));
//		CHECK(SBMLTest("l2v4", 754 ));
//		CHECK(SBMLTest("l2v4", 755 ));
//		CHECK(SBMLTest("l2v4", 756 ));
//		CHECK(SBMLTest("l2v4", 757 ));
//		CHECK(SBMLTest("l2v4", 758 ));
//		CHECK(SBMLTest("l2v4", 759 ));
//		CHECK(SBMLTest("l2v4", 760 ));
//		CHECK(SBMLTest("l2v4", 761 ));
//		CHECK(SBMLTest("l2v4", 762 ));
//		CHECK(SBMLTest("l2v4", 763 ));
//		CHECK(SBMLTest("l2v4", 764 ));
//		CHECK(SBMLTest("l2v4", 765 ));
//		CHECK(SBMLTest("l2v4", 766 ));
//		CHECK(SBMLTest("l2v4", 767 ));
//		CHECK(SBMLTest("l2v4", 768 ));
//		CHECK(SBMLTest("l2v4", 769 ));
//		CHECK(SBMLTest("l2v4", 770 ));
//		CHECK(SBMLTest("l2v4", 771 ));
//		CHECK(SBMLTest("l2v4", 772 ));
//		CHECK(SBMLTest("l2v4", 773 ));
//		CHECK(SBMLTest("l2v4", 774 ));
//		CHECK(SBMLTest("l2v4", 775 ));
//		CHECK(SBMLTest("l2v4", 776 ));
//		CHECK(SBMLTest("l2v4", 777 ));
//		CHECK(SBMLTest("l2v4", 778 ));
//		CHECK(SBMLTest("l2v4", 779 ));
//		CHECK(SBMLTest("l2v4", 780 ));
//		CHECK(SBMLTest("l2v4", 781 ));
//		CHECK(SBMLTest("l2v4", 782 ));
//		CHECK(SBMLTest("l2v4", 783 ));
//		CHECK(SBMLTest("l2v4", 784 ));
//		CHECK(SBMLTest("l2v4", 785 ));
//		CHECK(SBMLTest("l2v4", 786 ));
//		CHECK(SBMLTest("l2v4", 787 ));
//		CHECK(SBMLTest("l2v4", 788 ));
//		CHECK(SBMLTest("l2v4", 789 ));
//		CHECK(SBMLTest("l2v4", 790 ));
//		CHECK(SBMLTest("l2v4", 791 ));
//		CHECK(SBMLTest("l2v4", 792 ));
//		CHECK(SBMLTest("l2v4", 793 ));
//		CHECK(SBMLTest("l2v4", 794 ));
//		CHECK(SBMLTest("l2v4", 795 ));
//		CHECK(SBMLTest("l2v4", 796 ));
//		CHECK(SBMLTest("l2v4", 797 ));
//		CHECK(SBMLTest("l2v4", 798 ));
//		CHECK(SBMLTest("l2v4", 799 ));
//		CHECK(SBMLTest("l2v4", 800 ));
//		CHECK(SBMLTest("l2v4", 801 ));
//		CHECK(SBMLTest("l2v4", 802 ));
//		CHECK(SBMLTest("l2v4", 803 ));
//		CHECK(SBMLTest("l2v4", 804 ));
//		CHECK(SBMLTest("l2v4", 805 ));
//		CHECK(SBMLTest("l2v4", 806 ));
//		CHECK(SBMLTest("l2v4", 807 ));
//		CHECK(SBMLTest("l2v4", 808 ));
//		CHECK(SBMLTest("l2v4", 809 ));
//		CHECK(SBMLTest("l2v4", 810 ));
//		CHECK(SBMLTest("l2v4", 811 ));
//		CHECK(SBMLTest("l2v4", 812 ));
//		CHECK(SBMLTest("l2v4", 813 ));
//		CHECK(SBMLTest("l2v4", 814 ));
//		CHECK(SBMLTest("l2v4", 815 ));
//		CHECK(SBMLTest("l2v4", 816 ));
//		CHECK(SBMLTest("l2v4", 817 ));
//		CHECK(SBMLTest("l2v4", 818 ));
//		CHECK(SBMLTest("l2v4", 819 ));
//		CHECK(SBMLTest("l2v4", 820 ));
//		CHECK(SBMLTest("l2v4", 821 ));
//		CHECK(SBMLTest("l2v4", 822 ));
//		CHECK(SBMLTest("l2v4", 823 ));
//		CHECK(SBMLTest("l2v4", 824 ));
//		CHECK(SBMLTest("l2v4", 825 ));
//		CHECK(SBMLTest("l2v4", 826 ));
//		CHECK(SBMLTest("l2v4", 827 ));
//		CHECK(SBMLTest("l2v4", 828 ));
//		CHECK(SBMLTest("l2v4", 829 ));
//		CHECK(SBMLTest("l2v4", 830 ));
//		CHECK(SBMLTest("l2v4", 831 ));
//		CHECK(SBMLTest("l2v4", 832 ));
//		CHECK(SBMLTest("l2v4", 833 ));
//		CHECK(SBMLTest("l2v4", 834 ));
//		CHECK(SBMLTest("l2v4", 835 ));
//		CHECK(SBMLTest("l2v4", 836 ));
//		CHECK(SBMLTest("l2v4", 837 ));
//		CHECK(SBMLTest("l2v4", 838 ));
//		CHECK(SBMLTest("l2v4", 839 ));
//		CHECK(SBMLTest("l2v4", 840 ));
//		CHECK(SBMLTest("l2v4", 841 ));
//		CHECK(SBMLTest("l2v4", 842 ));
//		CHECK(SBMLTest("l2v4", 843 ));
//		CHECK(SBMLTest("l2v4", 844 ));
//		CHECK(SBMLTest("l2v4", 845 ));
//		CHECK(SBMLTest("l2v4", 846 ));
//		CHECK(SBMLTest("l2v4", 847 ));
//		CHECK(SBMLTest("l2v4", 848 ));
//		CHECK(SBMLTest("l2v4", 849 ));
//		CHECK(SBMLTest("l2v4", 850 ));
//		CHECK(SBMLTest("l2v4", 851 ));
//		CHECK(SBMLTest("l2v4", 852 ));
//		CHECK(SBMLTest("l2v4", 853 ));
//		CHECK(SBMLTest("l2v4", 854 ));
//		CHECK(SBMLTest("l2v4", 855 ));
//		CHECK(SBMLTest("l2v4", 856 ));
//		CHECK(SBMLTest("l2v4", 857 ));
//		CHECK(SBMLTest("l2v4", 858 ));
//		CHECK(SBMLTest("l2v4", 859 ));
//		CHECK(SBMLTest("l2v4", 860 ));
//		CHECK(SBMLTest("l2v4", 861 ));
//		CHECK(SBMLTest("l2v4", 862 ));
//		CHECK(SBMLTest("l2v4", 863 ));
//		CHECK(SBMLTest("l2v4", 864 ));
//		CHECK(SBMLTest("l2v4", 865 ));
//		CHECK(SBMLTest("l2v4", 866 ));
//		CHECK(SBMLTest("l2v4", 867 ));
//		CHECK(SBMLTest("l2v4", 868 ));
//		CHECK(SBMLTest("l2v4", 869 ));
//		CHECK(SBMLTest("l2v4", 870 ));
//		CHECK(SBMLTest("l2v4", 871 ));
//		CHECK(SBMLTest("l2v4", 872 ));
//		CHECK(SBMLTest("l2v4", 873 ));
//		CHECK(SBMLTest("l2v4", 874 ));
//		CHECK(SBMLTest("l2v4", 875 ));
//		CHECK(SBMLTest("l2v4", 876 ));
//		CHECK(SBMLTest("l2v4", 877 ));
//		CHECK(SBMLTest("l2v4", 878 ));
//		CHECK(SBMLTest("l2v4", 879 ));
//		CHECK(SBMLTest("l2v4", 880 ));
//		CHECK(SBMLTest("l2v4", 881 ));
//		CHECK(SBMLTest("l2v4", 882 ));
//		CHECK(SBMLTest("l2v4", 883 ));
//		CHECK(SBMLTest("l2v4", 884 ));
//		CHECK(SBMLTest("l2v4", 885 ));
//		CHECK(SBMLTest("l2v4", 886 ));
//		CHECK(SBMLTest("l2v4", 887 ));
//		CHECK(SBMLTest("l2v4", 888 ));
//		CHECK(SBMLTest("l2v4", 889 ));
//		CHECK(SBMLTest("l2v4", 890 ));
//		CHECK(SBMLTest("l2v4", 891 ));
//		CHECK(SBMLTest("l2v4", 892 ));
//		CHECK(SBMLTest("l2v4", 893 ));
//		CHECK(SBMLTest("l2v4", 894 ));
//		CHECK(SBMLTest("l2v4", 895 ));
//		CHECK(SBMLTest("l2v4", 896 ));
//		CHECK(SBMLTest("l2v4", 897 ));
//		CHECK(SBMLTest("l2v4", 898 ));
//		CHECK(SBMLTest("l2v4", 899 ));
//		CHECK(SBMLTest("l2v4", 900 ));
//		CHECK(SBMLTest("l2v4", 901 ));
//		CHECK(SBMLTest("l2v4", 902 ));
//		CHECK(SBMLTest("l2v4", 903 ));
//		CHECK(SBMLTest("l2v4", 904 ));
//		CHECK(SBMLTest("l2v4", 905 ));
//		CHECK(SBMLTest("l2v4", 906 ));
//		CHECK(SBMLTest("l2v4", 907 ));
//		CHECK(SBMLTest("l2v4", 908 ));
//		CHECK(SBMLTest("l2v4", 909 ));
//		CHECK(SBMLTest("l2v4", 910 ));
//		CHECK(SBMLTest("l2v4", 911 ));
//		CHECK(SBMLTest("l2v4", 912 ));
//		CHECK(SBMLTest("l2v4", 913 ));
//		CHECK(SBMLTest("l2v4", 914 ));
//		CHECK(SBMLTest("l2v4", 915 ));
//		CHECK(SBMLTest("l2v4", 916 ));
//		CHECK(SBMLTest("l2v4", 917 ));
//		CHECK(SBMLTest("l2v4", 918 ));
//		CHECK(SBMLTest("l2v4", 919 ));
//		CHECK(SBMLTest("l2v4", 920 ));
//		CHECK(SBMLTest("l2v4", 921 ));
//		CHECK(SBMLTest("l2v4", 922 ));
//		CHECK(SBMLTest("l2v4", 923 ));
//		CHECK(SBMLTest("l2v4", 924 ));
//		CHECK(SBMLTest("l2v4", 925 ));
//		CHECK(SBMLTest("l2v4", 926 ));
//		CHECK(SBMLTest("l2v4", 927 ));
//		CHECK(SBMLTest("l2v4", 928 ));
//		CHECK(SBMLTest("l2v4", 929 ));
//		CHECK(SBMLTest("l2v4", 930 ));
//		CHECK(SBMLTest("l2v4", 931 ));
//		CHECK(SBMLTest("l2v4", 932 ));
//		CHECK(SBMLTest("l2v4", 933 ));
//		CHECK(SBMLTest("l2v4", 934 ));
//		CHECK(SBMLTest("l2v4", 935 ));
//		CHECK(SBMLTest("l2v4", 936 ));
//		CHECK(SBMLTest("l2v4", 937 ));
//		CHECK(SBMLTest("l2v4", 938 ));
//		CHECK(SBMLTest("l2v4", 939 ));
//		CHECK(SBMLTest("l2v4", 940 ));
//		CHECK(SBMLTest("l2v4", 941 ));
//		CHECK(SBMLTest("l2v4", 942 ));
//		CHECK(SBMLTest("l2v4", 943 ));
//		CHECK(SBMLTest("l2v4", 944 ));
//		CHECK(SBMLTest("l2v4", 945 ));
//		CHECK(SBMLTest("l2v4", 946 ));
//		CHECK(SBMLTest("l2v4", 947 ));
//		CHECK(SBMLTest("l2v4", 948 ));
//		CHECK(SBMLTest("l2v4", 949 ));
//		CHECK(SBMLTest("l2v4", 950 ));
//		CHECK(SBMLTest("l2v4", 951 ));
//		CHECK(SBMLTest("l2v4", 952 ));
//		CHECK(SBMLTest("l2v4", 953 ));
//		CHECK(SBMLTest("l2v4", 954 ));
//		CHECK(SBMLTest("l2v4", 955 ));
//		CHECK(SBMLTest("l2v4", 956 ));
//		CHECK(SBMLTest("l2v4", 957 ));
//		CHECK(SBMLTest("l2v4", 958 ));
//		CHECK(SBMLTest("l2v4", 959 ));
//		CHECK(SBMLTest("l2v4", 960 ));
//		CHECK(SBMLTest("l2v4", 961 ));
//		CHECK(SBMLTest("l2v4", 962 ));
//		CHECK(SBMLTest("l2v4", 963 ));
//		CHECK(SBMLTest("l2v4", 964 ));
//		CHECK(SBMLTest("l2v4", 965 ));
//		CHECK(SBMLTest("l2v4", 966 ));
//		CHECK(SBMLTest("l2v4", 967 ));
//		CHECK(SBMLTest("l2v4", 968 ));
//		CHECK(SBMLTest("l2v4", 969 ));
//		CHECK(SBMLTest("l2v4", 970 ));
//		CHECK(SBMLTest("l2v4", 971 ));
//		CHECK(SBMLTest("l2v4", 972 ));
//		CHECK(SBMLTest("l2v4", 973 ));
//		CHECK(SBMLTest("l2v4", 974 ));
//		CHECK(SBMLTest("l2v4", 975 ));
//		CHECK(SBMLTest("l2v4", 976 ));
//		CHECK(SBMLTest("l2v4", 977 ));
//		CHECK(SBMLTest("l2v4", 978 ));
//		CHECK(SBMLTest("l2v4", 979 ));
//		CHECK(SBMLTest("l2v4", 980 ));
//		CHECK(SBMLTest("l2v4", 981 ));
//		CHECK(SBMLTest("l2v4", 982 ));
//		CHECK(SBMLTest("l2v4", 983 ));
//		CHECK(SBMLTest("l2v4", 984 ));
//		CHECK(SBMLTest("l2v4", 985 ));
//		CHECK(SBMLTest("l2v4", 986 ));
//		CHECK(SBMLTest("l2v4", 987 ));
//		CHECK(SBMLTest("l2v4", 988 ));
//		CHECK(SBMLTest("l2v4", 989 ));
//		CHECK(SBMLTest("l2v4", 990 ));
//		CHECK(SBMLTest("l2v4", 991 ));
//		CHECK(SBMLTest("l2v4", 992 ));
//		CHECK(SBMLTest("l2v4", 993 ));
//		CHECK(SBMLTest("l2v4", 994 ));
//		CHECK(SBMLTest("l2v4", 995 ));
//		CHECK(SBMLTest("l2v4", 996 ));
//		CHECK(SBMLTest("l2v4", 997 ));
//		CHECK(SBMLTest("l2v4", 998 ));
//		CHECK(SBMLTest("l2v4", 999 ));
//      CHECK(SBMLTest("l2v4", 1000));
//      CHECK(SBMLTest("l2v4", 1001));
//      CHECK(SBMLTest("l2v4", 1002));
//      CHECK(SBMLTest("l2v4", 1003));
//      CHECK(SBMLTest("l2v4", 1004));
//      CHECK(SBMLTest("l2v4", 1005));
//      CHECK(SBMLTest("l2v4", 1006));
//      CHECK(SBMLTest("l2v4", 1007));
//      CHECK(SBMLTest("l2v4", 1008));
//      CHECK(SBMLTest("l2v4", 1009));
//      CHECK(SBMLTest("l2v4", 1010));
//      CHECK(SBMLTest("l2v4", 1011));
//      CHECK(SBMLTest("l2v4", 1012));
//      CHECK(SBMLTest("l2v4", 1013));
//      CHECK(SBMLTest("l2v4", 1014));
//      CHECK(SBMLTest("l2v4", 1015));
//      CHECK(SBMLTest("l2v4", 1016));
//      CHECK(SBMLTest("l2v4", 1017));
//      CHECK(SBMLTest("l2v4", 1018));
//      CHECK(SBMLTest("l2v4", 1019));
//      CHECK(SBMLTest("l2v4", 1020));
//      CHECK(SBMLTest("l2v4", 1021));
//      CHECK(SBMLTest("l2v4", 1022));
//      CHECK(SBMLTest("l2v4", 1023));
//      CHECK(SBMLTest("l2v4", 1024));
//      CHECK(SBMLTest("l2v4", 1025));
//      CHECK(SBMLTest("l2v4", 1026));
//      CHECK(SBMLTest("l2v4", 1027));
//      CHECK(SBMLTest("l2v4", 1028));
//      CHECK(SBMLTest("l2v4", 1029));
//      CHECK(SBMLTest("l2v4", 1030));
//      CHECK(SBMLTest("l2v4", 1031));
//      CHECK(SBMLTest("l2v4", 1032));
//      CHECK(SBMLTest("l2v4", 1033));
//      CHECK(SBMLTest("l2v4", 1034));
//      CHECK(SBMLTest("l2v4", 1035));
//      CHECK(SBMLTest("l2v4", 1036));
//      CHECK(SBMLTest("l2v4", 1037));
//      CHECK(SBMLTest("l2v4", 1038));
//      CHECK(SBMLTest("l2v4", 1039));
//      CHECK(SBMLTest("l2v4", 1040));
//      CHECK(SBMLTest("l2v4", 1041));
//      CHECK(SBMLTest("l2v4", 1042));
//      CHECK(SBMLTest("l2v4", 1043));
//      CHECK(SBMLTest("l2v4", 1044));
//      CHECK(SBMLTest("l2v4", 1045));
//      CHECK(SBMLTest("l2v4", 1046));
//      CHECK(SBMLTest("l2v4", 1047));
//      CHECK(SBMLTest("l2v4", 1048));
//      CHECK(SBMLTest("l2v4", 1049));
//      CHECK(SBMLTest("l2v4", 1050));
//      CHECK(SBMLTest("l2v4", 1051));
//      CHECK(SBMLTest("l2v4", 1052));
//      CHECK(SBMLTest("l2v4", 1053));
//      CHECK(SBMLTest("l2v4", 1054));
//      CHECK(SBMLTest("l2v4", 1055));
//      CHECK(SBMLTest("l2v4", 1056));
//      CHECK(SBMLTest("l2v4", 1057));
//      CHECK(SBMLTest("l2v4", 1058));
//      CHECK(SBMLTest("l2v4", 1059));
//      CHECK(SBMLTest("l2v4", 1060));
//      CHECK(SBMLTest("l2v4", 1061));
//      CHECK(SBMLTest("l2v4", 1062));
//      CHECK(SBMLTest("l2v4", 1063));
//      CHECK(SBMLTest("l2v4", 1064));
//      CHECK(SBMLTest("l2v4", 1065));
//      CHECK(SBMLTest("l2v4", 1066));
//      CHECK(SBMLTest("l2v4", 1067));
//      CHECK(SBMLTest("l2v4", 1068));
//      CHECK(SBMLTest("l2v4", 1069));
//      CHECK(SBMLTest("l2v4", 1070));
//      CHECK(SBMLTest("l2v4", 1071));
//      CHECK(SBMLTest("l2v4", 1072));
//      CHECK(SBMLTest("l2v4", 1073));
//      CHECK(SBMLTest("l2v4", 1074));
//      CHECK(SBMLTest("l2v4", 1075));
//      CHECK(SBMLTest("l2v4", 1076));
//      CHECK(SBMLTest("l2v4", 1077));
//      CHECK(SBMLTest("l2v4", 1078));
//      CHECK(SBMLTest("l2v4", 1079));
//      CHECK(SBMLTest("l2v4", 1080));
//      CHECK(SBMLTest("l2v4", 1081));
//      CHECK(SBMLTest("l2v4", 1082));
//      CHECK(SBMLTest("l2v4", 1083));
//      CHECK(SBMLTest("l2v4", 1084));
//      CHECK(SBMLTest("l2v4", 1085));
//      CHECK(SBMLTest("l2v4", 1086));
//      CHECK(SBMLTest("l2v4", 1087));
//      CHECK(SBMLTest("l2v4", 1088));
//      CHECK(SBMLTest("l2v4", 1089));
//      CHECK(SBMLTest("l2v4", 1090));
//      CHECK(SBMLTest("l2v4", 1091));
//      CHECK(SBMLTest("l2v4", 1092));
//      CHECK(SBMLTest("l2v4", 1093));
//      CHECK(SBMLTest("l2v4", 1094));
//      CHECK(SBMLTest("l2v4", 1095));
//      CHECK(SBMLTest("l2v4", 1096));
//      CHECK(SBMLTest("l2v4", 1097));
//      CHECK(SBMLTest("l2v4", 1098));
//      CHECK(SBMLTest("l2v4", 1099));
//      CHECK(SBMLTest("l2v4", 1100));
//      CHECK(SBMLTest("l2v4", 1101));
//      CHECK(SBMLTest("l2v4", 1102));
//      CHECK(SBMLTest("l2v4", 1103));
//      CHECK(SBMLTest("l2v4", 1104));
//      CHECK(SBMLTest("l2v4", 1105));
//      CHECK(SBMLTest("l2v4", 1106));
//      CHECK(SBMLTest("l2v4", 1107));
//	    CHECK(SBMLTest("l2v4", 1108));
//      CHECK(SBMLTest("l2v4", 1109));
//      CHECK(SBMLTest("l2v4", 1110));
//      CHECK(SBMLTest("l2v4", 1111));
//      CHECK(SBMLTest("l2v4", 1112));
//      CHECK(SBMLTest("l2v4", 1113));
//      CHECK(SBMLTest("l2v4", 1114));
//      CHECK(SBMLTest("l2v4", 1115));
//      CHECK(SBMLTest("l2v4", 1116));
//      CHECK(SBMLTest("l2v4", 1117));
//      CHECK(SBMLTest("l2v4", 1118));
//      CHECK(SBMLTest("l2v4", 1119));
//      CHECK(SBMLTest("l2v4", 1120));
//      CHECK(SBMLTest("l2v4", 1121));
//      CHECK(SBMLTest("l2v4", 1122));
//      CHECK(SBMLTest("l2v4", 1123));
    }
}

bool SBMLTest(const string& version, int caseNumber)
{
	bool result(false);
    string excludedCases("rrExcludedTestCases.txt");
    vector<string> 	exclude(GetLinesInFile(excludedCases));
     vector<int> 	cant_simulate; //Theese are cases rr don't support (yet)

    for(int i = 0; i< exclude.size(); i++)
    {
        string nr = exclude[i];
        int j = ToInt(nr);
        if(j > 0)
        {
            cant_simulate.push_back(j);
        }
        else
        {
            Log(lError)<<"Bad line in file "<<excludedCases;
        }
    }
    //The following are cases currently having problems. Some do in fact pass the test, but takes very long to run
    vector<int> exceptions;
//    exceptions.push_back(958);  	//?
//    exceptions.push_back(961);    //Weird assignments...
//    exceptions.push_back(966); 	//This one takes really long tim..
    RoadRunner *rrI = gRR;     	//The roadrunner instance
    if(!rrI)
    {
    	return false;
    }
    try
    {
        if(std::find(exceptions.begin(), exceptions.end(), caseNumber) != exceptions.end())
        {
            //Don't simulate this one..
            throw(rr::Exception("KNOWN_PROBLEM"));
        }

         if(std::find(cant_simulate.begin(), cant_simulate.end(), caseNumber) != cant_simulate.end())
        {
            //Don't simulate this one..
            throw(rr::Exception("NOT_SUPPORTED"));
        }

 		cerr<<"Running Test: "<<caseNumber<<endl;
        string dataOutputFolder(gTSDataOutPutFolder);
        string dummy;
        string logFileName;

        CreateTestSuiteFileNameParts(caseNumber, ".log", dummy, logFileName);

        //Create subfolder for data output
        dataOutputFolder = JoinPath(dataOutputFolder, GetTestSuiteSubFolderName(caseNumber));

        if(!CreateFolder(dataOutputFolder))
        {
            throw(rr::Exception("Failed creating output folder for data output"));
        }

        TestSuiteModelSimulation simulation(dataOutputFolder);

        rrI->Reset();
        simulation.UseEngine(rrI);

        //Read SBML models.....
        string modelFilePath(gTSModelsPath);
        string modelFileName;

        simulation.SetCaseNumber(caseNumber);
        CreateTestSuiteFileNameParts(caseNumber, "-sbml-" + version + ".xml", modelFilePath, modelFileName);

        //The following will load and compile and simulate the sbml model in the file
        simulation.SetModelFilePath(modelFilePath);
        simulation.SetModelFileName(modelFileName);
        simulation.CompileIfDllExists(true);
        simulation.CopyFilesToOutputFolder();


        if(!simulation.LoadSBMLFromFile())
        {
            Log(lError)<<"Failed loading SBML model";
            goto end;
        }

        rrI->ComputeAndAssignConservationLaws(false);
        //Then read settings file if it exists..
        string settingsOveride("");//C:\\rrw\\Models\\settings_override.txt");
        if(!simulation.LoadSettings(settingsOveride))    //set selection list here!
        {
            Log(lError)<<"Failed loading SBML model settings";
        }

        //Then Simulate model
         if(!simulation.Simulate())
        {
            Log(lError)<<"Failed running simulation";
            throw("Failed running simulation");
        }

        //Write result
         if(!simulation.SaveResult())
        {
            //Failed to save data
        }

        if(!simulation.LoadReferenceData())
        {
            Log(lError)<<"Failed loading reference data";
        }

        simulation.CreateErrorData();
        result = simulation.Pass();
        simulation.SaveAllData();
        simulation.SaveModelAsXML(dataOutputFolder);
     }
    catch(rr::Exception& ex)
    {
        string error = ex.what();
        cerr<<"Case "<<caseNumber<<": Exception: "<<error<<endl;
    	return false;
    }
    end:
 	return result;
}
